{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/UI/ShakeManager.ts"],"names":["_decorator","Component","view","game","EventManager","EVENT_ENUM","SHAKE_TYPE_ENUM","ccclass","property","SCREEN_WIDTH","getVisibleSize","width","SCREEN_HEIGHT","height","DEFAULT_DURATION","ShakeManager","x","y","onLoad","Instance","on","SCREEN_SHAKE","onShake","onDestroy","off","type","isShaking","oldTime","totalTime","oldPos","node","position","stop","update","duration","amount","frequency","currentSecond","totalSecond","offset","Math","sin","PI","TOP","setPosition","BOTTOM","LEFT","RIGHT"],"mappings":"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","sourcesContent":["import { _decorator, Component, BlockInputEvents, Graphics, view, Color, game, UITransform } from 'cc';\nimport EventManager from \"db://assets/Runtime/EventManager\";\nimport {CONTROLLER_ENUM, EVENT_ENUM, SHAKE_TYPE_ENUM} from \"db://assets/Enums\";\nconst { ccclass, property } = _decorator;\n\n//当前屏幕宽度\nconst SCREEN_WIDTH = view.getVisibleSize().width;\nconst SCREEN_HEIGHT = view.getVisibleSize().height;\n\nconst enum FADE_STATE_ENUM{\n    IDLE = 'IDLE',\n    FADE_IN = 'FADE_IN',\n    FADE_OUT = 'FADE_OUT',\n}\n\nexport const DEFAULT_DURATION = 500;\n\n@ccclass('ShakeManager')\nexport class ShakeManager extends Component {\n    private isShaking: boolean = false;\n    private type: SHAKE_TYPE_ENUM;\n    private oldTime: number = 0;\n    private oldPos: { x: number, y: number } = { x:0, y: 0 };\n\n    onLoad(){\n        EventManager.Instance.on(EVENT_ENUM.SCREEN_SHAKE, this.onShake, this);\n    }\n\n    onDestroy(){\n        EventManager.Instance.off(EVENT_ENUM.SCREEN_SHAKE, this.onShake);\n    }\n\n    onShake(type: SHAKE_TYPE_ENUM){\n        if(this.isShaking) return;\n        this.type = type;\n        this.oldTime = game.totalTime;\n        this.isShaking = true;\n        this.oldPos.x = this.node.position.x;\n        this.oldPos.y = this.node.position.y;\n    }\n\n    stop(){\n        this.isShaking = false;\n    }\n\n    update(){\n        if(this.isShaking){\n            const duration = 200;\n            const amount = 6;\n            const frequency = 12;\n            const currentSecond = (game.totalTime - this.oldTime) / 1000;\n            const totalSecond = duration / 1000;\n            const offset = amount * Math.sin(frequency * Math.PI * currentSecond);\n\n            if(this.type === SHAKE_TYPE_ENUM.TOP){\n                this.node.setPosition(this.oldPos.x, this.oldPos.y - offset);\n            }else if(this.type === SHAKE_TYPE_ENUM.BOTTOM){\n                this.node.setPosition(this.oldPos.x, this.oldPos.y + offset);\n            }else if(this.type === SHAKE_TYPE_ENUM.LEFT){\n                this.node.setPosition(this.oldPos.x - offset, this.oldPos.y);\n            }else if(this.type === SHAKE_TYPE_ENUM.RIGHT){\n                this.node.setPosition(this.oldPos.x + offset, this.oldPos.y);\n            }\n\n            //震动结束\n            if(currentSecond > totalSecond){\n                this.isShaking = false;\n                this.node.setPosition(this.oldPos.x, this.oldPos.y);\n            }\n        }\n    }\n}\n\n"]}