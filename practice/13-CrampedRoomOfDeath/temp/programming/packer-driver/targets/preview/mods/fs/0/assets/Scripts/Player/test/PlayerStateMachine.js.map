{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/Player/test/PlayerStateMachine.ts"],"names":["_decorator","Animation","StateMachine","getInitParamsNumber","getInitParamsTrigger","ENTITY_STATE_ENUM","PARAMS_NAME_ENUM","IdleSubStateMachine","AttackSubStateMachine","EntityManager","TurnRightSubStateMachine","TurnLeftSubStateMachine","DeathSubStateMachine","AirDeathSubStateMachine","BlockFrontSubStateMachine","BlockRightSubStateMachine","BlockTurnLeftSubStateMachine","BlockBackSubStateMachine","BlockTurnRightSubStateMachine","BlockLeftSubStateMachine","ccclass","property","PlayerStateMachine","init","animationComponent","node","addComponent","initParams","initStateMachines","initAnimationEvent","Promise","all","waitingList","on","EventType","FINISHED","whiteList","name","defaultClip","some","v","includes","getComponent","state","IDLE","params","set","ATTACK","TURNLEFT","TURNRIGHT","BLOCKFRONT","BLOCKBACK","BLOCKLEFT","BLOCKRIGHT","BLOCKTURNLEFT","BLOCKTURNRIGHT","DEATH","AIRDEATH","DIRECTION","stateMachines","run","currentState","get","value"],"mappings":"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","sourcesContent":["import { _decorator, Animation } from 'cc'\nimport StateMachine, { getInitParamsNumber, getInitParamsTrigger } from '../../Base/StateMachine'\nimport { ENTITY_STATE_ENUM, PARAMS_NAME_ENUM } from '../../Enum'\nimport IdleSubStateMachine from './IdleSubStateMachine'\nimport AttackSubStateMachine from './AttackSubStateMachine'\nimport { EntityManager } from '../../Base/EntityManager'\nimport TurnRightSubStateMachine from './TurnRightSubStateMachine'\nimport TurnLeftSubStateMachine from './TurnLeftSubStateMachine'\nimport DeathSubStateMachine from './DeathSubStateMachine'\nimport AirDeathSubStateMachine from './AirDeathSubStateMachine'\nimport BlockFrontSubStateMachine from './BlockFrontSubStateMachine'\nimport BlockRightSubStateMachine from './BlockRightSubStateMachine'\nimport BlockTurnLeftSubStateMachine from './BlockTurnLeftSubStateMachine'\nimport BlockBackSubStateMachine from './BlockBackSubStateMachine'\nimport BlockTurnRightSubStateMachine from './BlockTurnRightSubStateMachine'\nimport BlockLeftSubStateMachine from './BlockLeftSubStateMachine'\nconst { ccclass, property } = _decorator\n\n@ccclass('PlayerStateMachine')\nexport class PlayerStateMachine extends StateMachine {\n  async init() {\n    this.animationComponent = this.node.addComponent(Animation)\n\n    this.initParams()\n    this.initStateMachines()\n    this.initAnimationEvent()\n\n    await Promise.all(this.waitingList)\n  }\n\n  initAnimationEvent() {\n    this.animationComponent.on(Animation.EventType.FINISHED, () => {\n      const whiteList = ['block', 'turn', 'attack']\n      const name = this.animationComponent.defaultClip.name\n      if (whiteList.some(v => name.includes(v))) {\n        this.node.getComponent(EntityManager).state = ENTITY_STATE_ENUM.IDLE\n      }\n    })\n  }\n\n  initParams() {\n    this.params.set(PARAMS_NAME_ENUM.IDLE, getInitParamsTrigger())\n    this.params.set(PARAMS_NAME_ENUM.ATTACK, getInitParamsTrigger())\n    this.params.set(PARAMS_NAME_ENUM.TURNLEFT, getInitParamsTrigger())\n    this.params.set(PARAMS_NAME_ENUM.TURNRIGHT, getInitParamsTrigger())\n    this.params.set(PARAMS_NAME_ENUM.BLOCKFRONT, getInitParamsTrigger())\n    this.params.set(PARAMS_NAME_ENUM.BLOCKBACK, getInitParamsTrigger())\n    this.params.set(PARAMS_NAME_ENUM.BLOCKLEFT, getInitParamsTrigger())\n    this.params.set(PARAMS_NAME_ENUM.BLOCKRIGHT, getInitParamsTrigger())\n    this.params.set(PARAMS_NAME_ENUM.BLOCKTURNLEFT, getInitParamsTrigger())\n    this.params.set(PARAMS_NAME_ENUM.BLOCKTURNRIGHT, getInitParamsTrigger())\n    this.params.set(PARAMS_NAME_ENUM.DEATH, getInitParamsTrigger())\n    this.params.set(PARAMS_NAME_ENUM.AIRDEATH, getInitParamsTrigger())\n    this.params.set(PARAMS_NAME_ENUM.DIRECTION, getInitParamsNumber())\n  }\n\n  initStateMachines() {\n    this.stateMachines.set(PARAMS_NAME_ENUM.IDLE, new IdleSubStateMachine(this))\n    this.stateMachines.set(PARAMS_NAME_ENUM.TURNLEFT, new TurnLeftSubStateMachine(this))\n    this.stateMachines.set(PARAMS_NAME_ENUM.TURNRIGHT, new TurnRightSubStateMachine(this))\n    this.stateMachines.set(PARAMS_NAME_ENUM.BLOCKFRONT, new BlockFrontSubStateMachine(this))\n    this.stateMachines.set(PARAMS_NAME_ENUM.BLOCKBACK, new BlockBackSubStateMachine(this))\n    this.stateMachines.set(PARAMS_NAME_ENUM.BLOCKLEFT, new BlockLeftSubStateMachine(this))\n    this.stateMachines.set(PARAMS_NAME_ENUM.BLOCKRIGHT, new BlockRightSubStateMachine(this))\n    this.stateMachines.set(PARAMS_NAME_ENUM.BLOCKTURNLEFT, new BlockTurnLeftSubStateMachine(this))\n    this.stateMachines.set(PARAMS_NAME_ENUM.BLOCKTURNRIGHT, new BlockTurnRightSubStateMachine(this))\n    this.stateMachines.set(PARAMS_NAME_ENUM.ATTACK, new AttackSubStateMachine(this))\n    this.stateMachines.set(PARAMS_NAME_ENUM.DEATH, new DeathSubStateMachine(this))\n    this.stateMachines.set(PARAMS_NAME_ENUM.AIRDEATH, new AirDeathSubStateMachine(this))\n  }\n\n  /***\n   * 根据当前所在状态（currentState）和参数（params）决定怎么切换状态机\n   */\n  run() {\n    switch (this.currentState) {\n      case this.stateMachines.get(PARAMS_NAME_ENUM.IDLE):\n      case this.stateMachines.get(PARAMS_NAME_ENUM.ATTACK):\n      case this.stateMachines.get(PARAMS_NAME_ENUM.TURNLEFT):\n      case this.stateMachines.get(PARAMS_NAME_ENUM.TURNRIGHT):\n      case this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKTURNLEFT):\n      case this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKTURNRIGHT):\n      case this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKFRONT):\n      case this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKBACK):\n      case this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKLEFT):\n      case this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKRIGHT):\n      case this.stateMachines.get(PARAMS_NAME_ENUM.DEATH):\n      case this.stateMachines.get(PARAMS_NAME_ENUM.AIRDEATH):\n        if (this.params.get(PARAMS_NAME_ENUM.DEATH).value) {\n          this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.DEATH)\n        } else if (this.params.get(PARAMS_NAME_ENUM.AIRDEATH).value) {\n          this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.AIRDEATH)\n        } else if (this.params.get(PARAMS_NAME_ENUM.TURNLEFT).value) {\n          this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.TURNLEFT)\n        } else if (this.params.get(PARAMS_NAME_ENUM.TURNRIGHT).value) {\n          this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.TURNRIGHT)\n        } else if (this.params.get(PARAMS_NAME_ENUM.BLOCKFRONT).value) {\n          this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKFRONT)\n        } else if (this.params.get(PARAMS_NAME_ENUM.BLOCKBACK).value) {\n          this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKBACK)\n        } else if (this.params.get(PARAMS_NAME_ENUM.BLOCKLEFT).value) {\n          this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKLEFT)\n        } else if (this.params.get(PARAMS_NAME_ENUM.BLOCKRIGHT).value) {\n          this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKRIGHT)\n        } else if (this.params.get(PARAMS_NAME_ENUM.BLOCKTURNLEFT).value) {\n          this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKTURNLEFT)\n        } else if (this.params.get(PARAMS_NAME_ENUM.BLOCKTURNRIGHT).value) {\n          this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKTURNRIGHT)\n        } else if (this.params.get(PARAMS_NAME_ENUM.ATTACK).value) {\n          this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.ATTACK)\n        } else if (this.params.get(PARAMS_NAME_ENUM.IDLE).value) {\n          this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.IDLE)\n        } else {\n          this.currentState = this.currentState\n        }\n        break\n      default:\n        this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.IDLE)\n        break\n    }\n  }\n}\n"]}