{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Base/StateMachine.ts"],"names":["_decorator","Component","FSM_PARAMS_TYPE_ENUM","ccclass","property","getInitParamsTrigger","type","TRIGGER","value","getInitParamsNumber","NUMBER","StateMachine","Map","getParams","paramsName","params","has","get","setParams","run","restTrigger","currentState","_currentState","newState","_","item"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAQA,MAAAA,U,OAAAA,U;AAAsCC,MAAAA,S,OAAAA,S;;AACtCC,MAAAA,oB,iBAAAA,oB;;;;;;;OAIF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U,GAE9B;;sCAQaK,oB,GAAuB,MAAK;AACrC,eAAO;AACHC,UAAAA,IAAI,EAAE;AAAA;AAAA,4DAAqBC,OADxB;AAEHC,UAAAA,KAAK,EAAE;AAFJ,SAAP;AAIH,O;;qCAEYC,mB,GAAsB,MAAI;AACnC,eAAO;AACHH,UAAAA,IAAI,EAAE;AAAA;AAAA,4DAAqBI,MADxB;AAEHF,UAAAA,KAAK,EAAE;AAFJ,SAAP;AAIH,O;;8BAGqBG,Y,WADrBR,OAAO,CAAC,cAAD,C,yBAAR,MACsBQ,YADtB,SAC2CV,SAD3C,CACqD;AAAA;AAAA;;AAAA,iDACA,IADA;;AAAA,0CAEd,IAAIW,GAAJ,EAFc;;AAAA,iDAGK,IAAIA,GAAJ,EAHL;;AAAA;;AAAA,+CAKJ,EALI;AAAA;;AAOjDC,QAAAA,SAAS,CAACC,UAAD,EAAoB;AACzB,cAAG,KAAKC,MAAL,CAAYC,GAAZ,CAAgBF,UAAhB,CAAH,EAA+B;AAC3B,mBAAO,KAAKC,MAAL,CAAYE,GAAZ,CAAgBH,UAAhB,EAA4BN,KAAnC;AACH;AACJ;;AAEDU,QAAAA,SAAS,CAACJ,UAAD,EAAqBN,KAArB,EAA4C;AACjD,cAAG,KAAKO,MAAL,CAAYC,GAAZ,CAAgBF,UAAhB,CAAH,EAA+B;AAC3B,iBAAKC,MAAL,CAAYE,GAAZ,CAAgBH,UAAhB,EAA4BN,KAA5B,GAAoCA,KAApC;AACA,iBAAKW,GAAL,GAF2B,CAG3B;;AACA,iBAAKC,WAAL;AACH;AACJ;;AAEe,YAAZC,YAAY,GAAE;AACd,iBAAO,KAAKC,aAAZ;AACH;;AAEe,YAAZD,YAAY,CAACE,QAAD,EAAmC;AAC/C,eAAKD,aAAL,GAAqBC,QAArB;;AACA,eAAKD,aAAL,CAAmBH,GAAnB;AACH;;AAEDC,QAAAA,WAAW,GAAE;AACT,eAAI,IAAM,CAACI,CAAD,EAAIC,IAAJ,CAAV,IAAuB,KAAKV,MAA5B,EAAmC;AAC/B,gBAAGU,IAAI,CAACnB,IAAL,KAAc;AAAA;AAAA,8DAAqBC,OAAtC,EAA8C;AAC1CkB,cAAAA,IAAI,CAACjB,KAAL,GAAa,KAAb;AACH;AACJ;AACJ;;AArCgD,O","sourcesContent":["import {_decorator, Animation, AnimationClip, Component, SpriteFrame} from 'cc';\nimport {FSM_PARAMS_TYPE_ENUM, PARAMS_NAME_ENUM} from \"db://assets/Enums\";\nimport State from \"db://assets/Base/State\";\nimport {SubStateMachine} from \"db://assets/Base/SubStateMachine\";\n\nconst { ccclass, property } = _decorator;\n\n//自定义联合类型\ntype ParamsValueType = boolean | number;\n\nexport interface IParamsValue{\n    type: FSM_PARAMS_TYPE_ENUM,\n    value: ParamsValueType,\n}\n\nexport const getInitParamsTrigger = () =>{\n    return {\n        type: FSM_PARAMS_TYPE_ENUM.TRIGGER,\n        value: false,\n    }\n}\n\nexport const getInitParamsNumber = ()=>{\n    return {\n        type: FSM_PARAMS_TYPE_ENUM.NUMBER,\n        value: 0,\n    }\n}\n\n@ccclass('StateMachine')\nexport abstract class StateMachine extends Component {\n    private _currentState: State | SubStateMachine = null\n    params:Map<string, IParamsValue> = new Map(); //参数列表\n    stateMachines: Map<string, State | SubStateMachine> = new Map(); //状态机列表\n    animationComponent: Animation\n    waitingList: Array<Promise<SpriteFrame[]>> = []\n\n    getParams(paramsName: string){\n        if(this.params.has(paramsName)){\n            return this.params.get(paramsName).value;\n        }\n    }\n\n    setParams(paramsName: string, value: ParamsValueType){\n        if(this.params.has(paramsName)){\n            this.params.get(paramsName).value = value;\n            this.run();\n            //重置trigger\n            this.restTrigger();\n        }\n    }\n\n    get currentState(){\n        return this._currentState;\n    }\n\n    set currentState(newState: State | SubStateMachine){\n        this._currentState = newState;\n        this._currentState.run();\n    }\n\n    restTrigger(){\n        for(const [_, item] of this.params){\n            if(item.type === FSM_PARAMS_TYPE_ENUM.TRIGGER){\n                item.value = false;\n            }\n        }\n    }\n\n    abstract init(): void\n    abstract run(): void\n}\n\n"]}