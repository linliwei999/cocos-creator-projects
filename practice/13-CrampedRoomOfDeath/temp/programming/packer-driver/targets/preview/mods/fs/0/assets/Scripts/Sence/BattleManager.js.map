{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/Sence/BattleManager.ts"],"names":["_decorator","Component","TileMapManager","createUINode","Levels","DataManager","TILE_HEIGHT","TILE_WIDTH","EventManager","ENTITY_TYPE_ENUM","EVENT_ENUM","PlayerManager","WoodenSkeletonManager","IronSkeletonManager","DoorManager","BurstManager","SpikesManager","ccclass","property","BattleManager","onLoad","Instance","levelIndex","on","NEXT_LEVEL","nextLevel","onDestroy","off","start","generateStage","initLevel","level","clearLevel","mapInfo","mapRowCount","length","mapColumnCount","generateTileMap","stage","destroyAllChildren","reset","setParent","node","tileMap","tileManager","addComponent","init","adaptPos","generateBursts","generateSpikes","generateDoor","generateEnemies","generatePlayer","player","playerManager","emit","PLAYER_BORN","promise","i","enemies","enemy","Manager","type","SKELETON_WOODEN","manager","push","Promise","all","door","doorManager","bursts","burst","burstManager","spikes","spikesManager","disX","disY","setPosition"],"mappings":"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","sourcesContent":["import {_decorator, Component, Node} from 'cc';\nimport {TileMapManager} from \"db://assets/Scripts/Tile/TileMapManager\";\nimport {createUINode} from \"db://assets/Utils\";\nimport Levels, {ILevel} from \"db://assets/Levels\";\nimport DataManager from \"db://assets/Runtime/DataManager\";\nimport {TILE_HEIGHT, TILE_WIDTH} from \"db://assets/Scripts/Tile/TileManager\";\nimport EventManager from \"db://assets/Runtime/EventManager\";\nimport {DIRECTION_ENUM, ENTITY_STATE_ENUM, ENTITY_TYPE_ENUM, EVENT_ENUM} from \"db://assets/Enums\";\nimport {PlayerManager} from \"db://assets/Scripts/Player/PlayerManager\";\nimport {WoodenSkeletonManager} from \"db://assets/Scripts/WoodenSkeleton/WoodenSkeletonManager\";\nimport {IronSkeletonManager} from \"db://assets/Scripts/IronSkeleton/IronSkeletonManager\";\nimport {DoorManager} from \"db://assets/Scripts/Door/DoorManager\";\nimport {BurstManager} from \"db://assets/Scripts/Burst/BurstManager\";\nimport {SpikesManager} from \"db://assets/Scripts/Spikes/SpikesManager\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('BattleManager')\nexport class BattleManager extends Component {\n    // [1]\n    // dummy = '';\n\n    // [2]\n    // @property\n    // serializableDummy = 0;\n    level: ILevel\n    stage: Node\n\n    onLoad(){\n        DataManager.Instance.levelIndex = 2;\n        EventManager.Instance.on(EVENT_ENUM.NEXT_LEVEL, this.nextLevel, this);\n    }\n\n    onDestroy(){\n        EventManager.Instance.off(EVENT_ENUM.NEXT_LEVEL, this.nextLevel);\n    }\n\n    start () {\n        this.generateStage();\n        this.initLevel();\n    }\n\n    initLevel(){\n        const level = Levels[`level${DataManager.Instance.levelIndex}`];\n        if(level){\n            this.clearLevel();\n            this.level = level;\n            //把地图数据存到数据中心(单例)\n            DataManager.Instance.mapInfo = this.level.mapInfo;\n            DataManager.Instance.mapRowCount = this.level.mapInfo.length || 0;\n            DataManager.Instance.mapColumnCount = this.level.mapInfo[0].length || 0;\n            this.generateTileMap();\n            // this.generateDoor();\n            // this.generatePlayer();\n            // this.generateEnemies();\n        }\n    }\n\n    //下一关函数\n    nextLevel(){\n        DataManager.Instance.levelIndex++\n        this.initLevel();\n    }\n\n    clearLevel(){\n        this.stage.destroyAllChildren();\n        DataManager.Instance.reset();\n    }\n\n    generateStage(){\n        //创建舞台\n        this.stage = createUINode();\n        this.stage.setParent(this.node);\n    }\n\n    //生成地图\n    async generateTileMap(){\n        const tileMap = createUINode();\n        tileMap.setParent(this.stage);\n        const tileManager = tileMap.addComponent(TileMapManager);\n        await tileManager.init();\n        this.adaptPos();\n        this.generateBursts();\n        this.generateSpikes();\n        this.generateDoor();\n        this.generateEnemies();\n        this.generatePlayer();\n    }\n\n    //生成玩家\n    async generatePlayer(){\n        const player = createUINode();\n        player.setParent(this.stage);\n        const playerManager = player.addComponent(PlayerManager);\n        // await playerManager.init({\n        //     x: 2,\n        //     y: 8,\n        //     type: ENTITY_TYPE_ENUM.PLAYER,\n        //     direction: DIRECTION_ENUM.TOP,\n        //     state: ENTITY_STATE_ENUM.IDLE\n        // });\n        await playerManager.init(this.level.player);\n        DataManager.Instance.player = playerManager;\n        EventManager.Instance.emit(EVENT_ENUM.PLAYER_BORN, true);\n    }\n\n    //生成敌人\n    async generateEnemies(){\n        const promise = [];\n        for (let i = 0; i < this.level.enemies.length; i++) {\n            const enemy = this.level.enemies[i];\n            //生成木骷髅\n            const node = createUINode();\n            node.setParent(this.stage);\n            const Manager = enemy.type === ENTITY_TYPE_ENUM.SKELETON_WOODEN ? WoodenSkeletonManager : IronSkeletonManager;\n            const manager = node.addComponent(Manager);\n            promise.push(manager.init(enemy));\n            DataManager.Instance.enemies.push(manager);\n        }\n        await Promise.all(promise);\n    }\n\n    //生成门\n    async generateDoor(){\n        const door = createUINode();\n        door.setParent(this.stage);\n        const doorManager = door.addComponent(DoorManager);\n        await doorManager.init(this.level.door);\n        DataManager.Instance.door = doorManager;\n    }\n\n    //地裂瓦片\n    async generateBursts(){\n        const promise = [];\n        for (let i = 0; i < this.level.bursts.length; i++) {\n            const burst = this.level.bursts[i];\n            //生成木骷髅\n            const node = createUINode();\n            node.setParent(this.stage);\n            const burstManager = node.addComponent(BurstManager);\n            promise.push(burstManager.init(burst));\n            DataManager.Instance.bursts.push(burstManager);\n        }\n        await Promise.all(promise);\n    }\n\n    //地刺\n    async generateSpikes(){\n        const promise = [];\n        for (let i = 0; i < this.level.spikes.length; i++) {\n            const spikes = this.level.spikes[i];\n            //生成木骷髅\n            const node = createUINode();\n            node.setParent(this.stage);\n            const spikesManager = node.addComponent(SpikesManager);\n            promise.push(spikesManager.init(spikes));\n            DataManager.Instance.spikes.push(spikesManager);\n        }\n        await Promise.all(promise);\n    }\n\n    //瓦片地图适配屏幕\n    adaptPos () {\n        const { mapRowCount, mapColumnCount } = DataManager.Instance;\n        const disX = TILE_WIDTH * mapRowCount / 2;\n        const disY = TILE_HEIGHT * mapColumnCount / 2 + 80;\n        this.stage.setPosition(-disX, disY);\n    }\n}\n\n"]}