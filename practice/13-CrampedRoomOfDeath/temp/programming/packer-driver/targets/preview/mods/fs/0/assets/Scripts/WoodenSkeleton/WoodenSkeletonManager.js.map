{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/WoodenSkeleton/WoodenSkeletonManager.ts"],"names":["_decorator","DIRECTION_ENUM","ENTITY_STATE_ENUM","ENTITY_TYPE_ENUM","EVENT_ENUM","EventManager","EntityManager","DataManager","WoodenSkeletonStateMachine","ccclass","property","ANIMATION_SPEED","WoodenSkeletonManager","init","fsm","node","addComponent","x","y","type","PLAYER","direction","TOP","state","IDLE","Instance","on","PLAYER_MOVE_END","onChangeDirection","PLAYER_BORN","isInit","player","playerX","playerY","disX","Math","abs","disY","RIGHT","LEFT","BOTTOM"],"mappings":"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","sourcesContent":["import {_decorator} from 'cc';\nimport {DIRECTION_ENUM, ENTITY_STATE_ENUM, ENTITY_TYPE_ENUM, EVENT_ENUM} from \"db://assets/Enums\";\nimport EventManager from \"db://assets/Runtime/EventManager\";\nimport {EntityManager} from \"db://assets/Base/EntityManager\";\nimport DataManager from \"db://assets/Runtime/DataManager\";\nimport {WoodenSkeletonStateMachine} from \"db://assets/Scripts/WoodenSkeleton/WoodenSkeletonStateMachine\";\n\nconst { ccclass, property } = _decorator;\n\nconst ANIMATION_SPEED = 1/8;\n\n@ccclass('WoodenSkeletonManager')\nexport class WoodenSkeletonManager extends EntityManager {\n\n    async init(){\n        this.fsm = this.node.addComponent(WoodenSkeletonStateMachine);\n        await this.fsm.init();\n        super.init({\n            x: 7,\n            y: 7,\n            type: ENTITY_TYPE_ENUM.PLAYER,\n            direction: DIRECTION_ENUM.TOP,\n            state: ENTITY_STATE_ENUM.IDLE\n        });\n        EventManager.Instance.on(EVENT_ENUM.PLAYER_MOVE_END, this.onChangeDirection, this);\n        EventManager.Instance.on(EVENT_ENUM.PLAYER_BORN, this.onChangeDirection, this);\n    }\n\n    onChangeDirection(isInit: boolean = false){\n        if(!DataManager.Instance.player){\n            return;\n        }\n        const { x: playerX, y: playerY } = DataManager.Instance.player;\n        const disX = Math.abs(this.x - playerX);\n        const disY = Math.abs(this.y - playerY);\n        if(disX === disY && !isInit){\n            return\n        }\n        //第一象限\n        if (playerX >= this.x && playerY <= this.y){\n            this.direction = disY > disX ? DIRECTION_ENUM.TOP : DIRECTION_ENUM.RIGHT;\n        }else if (playerX <= this.x && playerY <= this.y){\n            this.direction = disY > disX ? DIRECTION_ENUM.TOP : DIRECTION_ENUM.LEFT;\n        }else if (playerX <= this.x && playerY >= this.y){\n            this.direction = disY > disX ? DIRECTION_ENUM.BOTTOM : DIRECTION_ENUM.LEFT;\n        }else if (playerX >= this.x && playerY >= this.y){\n            this.direction = disY > disX ? DIRECTION_ENUM.BOTTOM : DIRECTION_ENUM.RIGHT;\n        }\n    }\n}\n\n"]}