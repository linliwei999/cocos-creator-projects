{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Base/State.ts"],"names":["State","AnimationClip","Sprite","animation","ResourceManager","sortSpriteFrame","ANIMATION_SPEED","constructor","fsm","path","wrapMode","speed","WrapMode","Normal","init","promise","Instance","loadDir","waitingList","push","spriteFrames","animationClip","track","ObjectTrack","TrackPath","toComponent","toProperty","frames","map","item","index","channel","curve","assignSorted","addTrack","name","duration","length","run","animationComponent","defaultClip","play"],"mappings":";;;kGAWqBA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;AAPbC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;;AACxBC,MAAAA,e;;AAECC,MAAAA,e,iBAAAA,e;;;;;;;iCAEKC,e,GAAkB,IAAE,C;;yBAEZN,K,GAAN,MAAMA,KAAN,CAAY;AACvBO,QAAAA,WAAW,CACCC,GADD,EAECC,IAFD,EAGCC,QAHD,EAICC,KAJD,EAKV;AAAA,cAFWD,QAEX;AAFWA,YAAAA,QAEX,GAF8CT,aAAa,CAACW,QAAd,CAAuBC,MAErE;AAAA;;AAAA,cADWF,KACX;AADWA,YAAAA,KACX,GAD2BL,eAC3B;AAAA;;AAAA;;AAAA,eAJWE,GAIX,GAJWA,GAIX;AAAA,eAHWC,IAGX,GAHWA,IAGX;AAAA,eAFWC,QAEX,GAFWA,QAEX;AAAA,eADWC,KACX,GADWA,KACX;AACG,eAAKG,IAAL;AACH;;AAGKA,QAAAA,IAAI,GAAE;AAAA;;AAAA;AACR,gBAAMC,OAAO,GAAG;AAAA;AAAA,oDAAgBC,QAAhB,CAAyBC,OAAzB,CAAiC,KAAI,CAACR,IAAtC,CAAhB;;AACA,YAAA,KAAI,CAACD,GAAL,CAASU,WAAT,CAAqBC,IAArB,CAA0BJ,OAA1B;;AACA,gBAAMK,YAAY,SAASL,OAA3B;AACA,YAAA,KAAI,CAACM,aAAL,GAAqB,IAAIpB,aAAJ,EAArB;AAEA,gBAAMqB,KAAK,GAAG,IAAInB,SAAS,CAACoB,WAAd,EAAd,CANQ,CAMmC;;AAC3CD,YAAAA,KAAK,CAACb,IAAN,GAAa,IAAIN,SAAS,CAACqB,SAAd,GAA0BC,WAA1B,CAAsCvB,MAAtC,EAA8CwB,UAA9C,CAAyD,aAAzD,CAAb,CAPQ,CAO8E;;AACtF,gBAAMC,MAAmC,GAAG;AAAA;AAAA,oDAAgBP,YAAhB,EAA8BQ,GAA9B,CAAkC,CAACC,IAAD,EAAOC,KAAP,KAAgB,CAAC,KAAI,CAACnB,KAAL,GAAamB,KAAd,EAAqBD,IAArB,CAAlD,CAA5C,CARQ,CASR;;AACAP,YAAAA,KAAK,CAACS,OAAN,CAAcC,KAAd,CAAoBC,YAApB,CAAiCN,MAAjC,EAVQ,CAWR;;AACA,YAAA,KAAI,CAACN,aAAL,CAAmBa,QAAnB,CAA4BZ,KAA5B;;AACA,YAAA,KAAI,CAACD,aAAL,CAAmBc,IAAnB,GAA0B,KAAI,CAAC1B,IAA/B;AACA,YAAA,KAAI,CAACY,aAAL,CAAmBe,QAAnB,GAA8BT,MAAM,CAACU,MAAP,GAAgB,KAAI,CAAC1B,KAAnD,CAdQ,CAckD;;AAC1D,YAAA,KAAI,CAACU,aAAL,CAAmBX,QAAnB,GAA8B,KAAI,CAACA,QAAnC;AAfQ;AAgBX;;AAED4B,QAAAA,GAAG,GAAE;AAAA;;AACD,cAAG,+BAAK9B,GAAL,CAAS+B,kBAAT,CAA4BC,WAA5B,gFAAyCL,IAAzC,8BAAkD,KAAKd,aAAvD,wDAAkD,oBAAoBc,IAAtE,CAAH,EAA8E;AAC1E;AACH;;AACD,eAAK3B,GAAL,CAAS+B,kBAAT,CAA4BC,WAA5B,GAA0C,KAAKnB,aAA/C;AACA,eAAKb,GAAL,CAAS+B,kBAAT,CAA4BE,IAA5B;AACH;;AAnCsB,O","sourcesContent":["/****\n* 1.需要知道animationClip\n* 2.需要具有播放动画能力\n* */\nimport {AnimationClip, Sprite, animation, SpriteFrame } from \"cc\";\nimport ResourceManager from \"db://assets/Runtime/ResourceManager\";\nimport {StateMachine} from \"db://assets/Base/StateMachine\";\nimport {sortSpriteFrame} from \"db://assets/Utils\";\n\nexport const ANIMATION_SPEED = 1/8;\n\nexport default class State {\n    constructor(\n        private fsm: StateMachine,\n        private path: string,\n        private wrapMode: AnimationClip.WrapMode = AnimationClip.WrapMode.Normal,\n        private speed: number = ANIMATION_SPEED\n    ){\n        this.init();\n    }\n    private animationClip: AnimationClip\n\n    async init(){\n        const promise = ResourceManager.Instance.loadDir(this.path);\n        this.fsm.waitingList.push(promise);\n        const spriteFrames = await promise;\n        this.animationClip = new AnimationClip();\n\n        const track = new animation.ObjectTrack(); // 创建一个对象轨道\n        track.path = new animation.TrackPath().toComponent(Sprite).toProperty('spriteFrame'); // 指定轨道路径\n        const frames:Array<[number, SpriteFrame]> = sortSpriteFrame(spriteFrames).map((item, index)=> [this.speed * index, item]);\n        // 为 x 通道的曲线添加关键帧\n        track.channel.curve.assignSorted(frames);\n        // 最后将轨道添加到动画剪辑以应用\n        this.animationClip.addTrack(track);\n        this.animationClip.name = this.path;\n        this.animationClip.duration = frames.length * this.speed; // 整个动画剪辑的周期\n        this.animationClip.wrapMode = this.wrapMode;\n    }\n\n    run(){\n        if(this.fsm.animationComponent.defaultClip?.name === this.animationClip?.name){\n            return;\n        }\n        this.fsm.animationComponent.defaultClip = this.animationClip;\n        this.fsm.animationComponent.play();\n    }\n}"]}