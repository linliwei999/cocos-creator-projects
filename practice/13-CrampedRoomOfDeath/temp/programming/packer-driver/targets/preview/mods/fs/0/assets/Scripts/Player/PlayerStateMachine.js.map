{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/Player/PlayerStateMachine.ts"],"names":["_decorator","Animation","ENTITY_STATE_ENUM","FSM_PARAMS_TYPE_ENUM","PARAMS_NAME_ENUM","getInitParamsNumber","getInitParamsTrigger","StateMachine","IdleSubStateMachine","TurnLeftSubStateMachine","BlockFrontSubStateMachine","BlockTurnLeftSubStateMachine","EntityManager","DeathSubStateMachine","AttackSubStateMachine","ccclass","property","PlayerStateMachine","restTrigger","_","item","params","type","TRIGGER","value","init","animationComponent","addComponent","initParams","initStateMachine","initAnimationEvent","Promise","all","waitingList","set","IDLE","TURNLEFT","BLOCKFRONT","BLOCKTURNLEFT","ATTACK","DEATH","DIRECTION","stateMachines","on","EventType","FINISHED","name","defaultClip","whiteList","some","v","includes","node","getComponent","state","run","currentState","get"],"mappings":"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","sourcesContent":["import {_decorator, Animation, AnimationClip, Component, SpriteFrame} from 'cc';\nimport {ENTITY_STATE_ENUM, FSM_PARAMS_TYPE_ENUM, PARAMS_NAME_ENUM} from \"db://assets/Enums\";\nimport State from \"db://assets/Base/State\";\nimport {getInitParamsNumber, getInitParamsTrigger, StateMachine} from \"db://assets/Base/StateMachine\";\nimport IdleSubStateMachine from \"db://assets/Scripts/Player/IdleSubStateMachine\";\nimport TurnLeftSubStateMachine from \"db://assets/Scripts/Player/TurnLeftSubStateMachine\";\nimport BlockFrontSubStateMachine from \"db://assets/Scripts/Player/BlockFrontSubStateMachine\";\nimport BlockTurnLeftSubStateMachine from \"db://assets/Scripts/Player/BlockTurnLeftSubStateMachine\";\nimport {EntityManager} from \"db://assets/Base/EntityManager\";\nimport DeathSubStateMachine from \"db://assets/Scripts/Player/DeathSubStateMachine\";\nimport AttackSubStateMachine from \"db://assets/Scripts/Player/AttackSubStateMachine\";\n\nconst { ccclass, property } = _decorator;\n\n//自定义联合类型\ntype ParamsValueType = boolean | number;\n\n@ccclass('PlayerStateMachine')\nexport class PlayerStateMachine extends StateMachine {\n\n    restTrigger(){\n        for(const [_, item] of this.params){\n            if(item.type === FSM_PARAMS_TYPE_ENUM.TRIGGER){\n                item.value = false;\n            }\n        }\n    }\n\n    async init(){\n        this.animationComponent = this.addComponent(Animation);\n        this.initParams();\n        this.initStateMachine();\n        this.initAnimationEvent();\n        await Promise.all(this.waitingList);\n    }\n\n    initParams(){\n        //注册参数\n        this.params.set(PARAMS_NAME_ENUM.IDLE, getInitParamsTrigger());\n        this.params.set(PARAMS_NAME_ENUM.TURNLEFT, getInitParamsTrigger());\n        this.params.set(PARAMS_NAME_ENUM.BLOCKFRONT, getInitParamsTrigger());\n        this.params.set(PARAMS_NAME_ENUM.BLOCKTURNLEFT, getInitParamsTrigger());\n        this.params.set(PARAMS_NAME_ENUM.ATTACK, getInitParamsTrigger());\n        this.params.set(PARAMS_NAME_ENUM.DEATH, getInitParamsTrigger());\n        this.params.set(PARAMS_NAME_ENUM.DIRECTION, getInitParamsNumber());\n    }\n\n    initStateMachine(){\n        //注册子状态机\n        this.stateMachines.set(PARAMS_NAME_ENUM.IDLE, new IdleSubStateMachine(this));\n        this.stateMachines.set(PARAMS_NAME_ENUM.TURNLEFT, new TurnLeftSubStateMachine(this));\n        this.stateMachines.set(PARAMS_NAME_ENUM.BLOCKFRONT, new BlockFrontSubStateMachine(this));\n        this.stateMachines.set(PARAMS_NAME_ENUM.BLOCKTURNLEFT, new BlockTurnLeftSubStateMachine(this));\n        this.stateMachines.set(PARAMS_NAME_ENUM.ATTACK, new AttackSubStateMachine(this));\n        this.stateMachines.set(PARAMS_NAME_ENUM.DEATH, new DeathSubStateMachine(this));\n    }\n\n    initAnimationEvent(){\n        this.animationComponent.on(Animation.EventType.FINISHED, ()=> {\n            const name = this.animationComponent.defaultClip.name;\n            const whiteList = ['turn', 'block', 'attack'];\n            if(whiteList.some(v=> name.includes(v))){\n                this.node.getComponent(EntityManager).state = ENTITY_STATE_ENUM.IDLE;\n                // this.setParams(PARAMS_NAME_ENUM.IDLE, true);\n            }\n        });\n    }\n\n    run(){\n        switch (this.currentState){\n            case this.stateMachines.get(PARAMS_NAME_ENUM.TURNLEFT):\n            case this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKFRONT):\n            case this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKTURNLEFT):\n            case this.stateMachines.get(PARAMS_NAME_ENUM.ATTACK):\n            case this.stateMachines.get(PARAMS_NAME_ENUM.DEATH):\n            case this.stateMachines.get(PARAMS_NAME_ENUM.IDLE):\n                if(this.params.get(PARAMS_NAME_ENUM.BLOCKTURNLEFT).value){\n                    this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKTURNLEFT);\n                }else if(this.params.get(PARAMS_NAME_ENUM.BLOCKFRONT).value){\n                    this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.BLOCKFRONT);\n                }else if(this.params.get(PARAMS_NAME_ENUM.ATTACK).value){\n                    this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.ATTACK);\n                }else if(this.params.get(PARAMS_NAME_ENUM.DEATH).value){\n                    this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.DEATH);\n                }else if(this.params.get(PARAMS_NAME_ENUM.TURNLEFT).value){\n                    this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.TURNLEFT);\n                    }else if(this.params.get(PARAMS_NAME_ENUM.IDLE).value){\n                        this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.IDLE);\n                    }else{\n                        this.currentState = this.currentState;\n                    }\n                break;\n            default:\n                this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.IDLE);\n        }\n    }\n}\n\n"]}