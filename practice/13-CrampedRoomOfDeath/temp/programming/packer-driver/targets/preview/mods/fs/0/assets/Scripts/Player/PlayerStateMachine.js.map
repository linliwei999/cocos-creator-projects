{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/Player/PlayerStateMachine.ts"],"names":["_decorator","Component","AnimationClip","Animation","FSM_PARAMS_TYPE_ENUM","PARAMS_NAME_ENUM","State","ccclass","property","getInitParamsTrigger","type","TRIGGER","value","PlayerStateMachine","Map","getParams","paramsName","params","has","get","setParams","run","currentState","_currentState","newState","init","animationComponent","addComponent","initParams","initStateMachine","Promise","all","waitingList","set","IDLE","TURNLEFT","stateMachines","WrapMode","Loop"],"mappings":"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","sourcesContent":["import {_decorator, Component, AnimationClip, Animation, SpriteFrame} from 'cc';\nimport {FSM_PARAMS_TYPE_ENUM, PARAMS_NAME_ENUM} from \"db://assets/Enums\";\nimport State from \"db://assets/Base/State\";\n\nconst { ccclass, property } = _decorator;\n\n//自定义联合类型\ntype ParamsValueType = boolean | number;\n\nexport interface IParamsValue{\n    type: FSM_PARAMS_TYPE_ENUM,\n    value: ParamsValueType,\n}\n\nexport const getInitParamsTrigger = () =>{\n    return {\n        type: FSM_PARAMS_TYPE_ENUM.TRIGGER,\n        value: false,\n    }\n}\n\n@ccclass('PlayerStateMachine')\nexport class PlayerStateMachine extends Component {\n    private _currentState: State = null\n    params:Map<string, IParamsValue> = new Map(); //参数列表\n    stateMachines: Map<string, State> = new Map(); //状态机列表\n    animationComponent: Animation\n    waitingList: Array<Promise<SpriteFrame[]>> = []\n\n    getParams(paramsName: string){\n        if(this.params.has(paramsName)){\n            return this.params.get(paramsName).value;\n        }\n    }\n\n    setParams(paramsName: string, value: ParamsValueType){\n        if(this.params.has(paramsName)){\n            this.params.get(paramsName).value = value;\n            this.run();\n        }\n    }\n\n    get currentState(){\n        return this._currentState;\n    }\n\n    set currentState(newState: State){\n        this._currentState = newState;\n        this._currentState.run();\n    }\n\n    async init(){\n        this.animationComponent = this.addComponent(Animation);\n        this.initParams();\n        this.initStateMachine();\n        await Promise.all(this.waitingList);\n    }\n\n    initParams(){\n        this.params.set(PARAMS_NAME_ENUM.IDLE, getInitParamsTrigger());\n        this.params.set(PARAMS_NAME_ENUM.TURNLEFT, getInitParamsTrigger());\n    }\n\n    initStateMachine(){\n        this.stateMachines.set(PARAMS_NAME_ENUM.IDLE, new State(this, 'texture/player/idle/top', AnimationClip.WrapMode.Loop));\n        this.stateMachines.set(PARAMS_NAME_ENUM.TURNLEFT, new State(this, 'texture/player/turnleft/top'));\n    }\n\n    run(){\n        switch (this.currentState){\n            case this.stateMachines.get(PARAMS_NAME_ENUM.TURNLEFT):\n            case this.stateMachines.get(PARAMS_NAME_ENUM.IDLE):\n                if(this.params.get(PARAMS_NAME_ENUM.TURNLEFT)){\n                    this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.TURNLEFT);\n                    }else if(this.params.get(PARAMS_NAME_ENUM.IDLE)){\n                    this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.IDLE);\n                }\n                break;\n            default:\n                this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.IDLE);\n        }\n    }\n}\n\n"]}