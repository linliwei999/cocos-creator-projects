{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/Player/PlayerStateMachine.ts"],"names":["_decorator","Animation","AnimationClip","FSM_PARAMS_TYPE_ENUM","PARAMS_NAME_ENUM","State","StateMachine","ccclass","property","getInitParamsTrigger","type","TRIGGER","value","PlayerStateMachine","restTrigger","_","item","params","init","animationComponent","addComponent","initParams","initStateMachine","initAnimationEvent","Promise","all","waitingList","set","IDLE","TURNLEFT","stateMachines","WrapMode","Loop","on","EventType","FINISHED","name","defaultClip","whiteList","some","v","includes","setParams","run","currentState","get"],"mappings":"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","sourcesContent":["import {_decorator, Animation, AnimationClip, Component, SpriteFrame} from 'cc';\nimport {FSM_PARAMS_TYPE_ENUM, PARAMS_NAME_ENUM} from \"db://assets/Enums\";\nimport State from \"db://assets/Base/State\";\nimport {StateMachine} from \"db://assets/Base/StateMachine\";\n\nconst { ccclass, property } = _decorator;\n\n//自定义联合类型\ntype ParamsValueType = boolean | number;\n\nexport interface IParamsValue{\n    type: FSM_PARAMS_TYPE_ENUM,\n    value: ParamsValueType,\n}\n\nexport const getInitParamsTrigger = () =>{\n    return {\n        type: FSM_PARAMS_TYPE_ENUM.TRIGGER,\n        value: false,\n    }\n}\n\n@ccclass('PlayerStateMachine')\nexport class PlayerStateMachine extends StateMachine {\n\n    restTrigger(){\n        for(const [_, item] of this.params){\n            if(item.type === FSM_PARAMS_TYPE_ENUM.TRIGGER){\n                item.value = false;\n            }\n        }\n    }\n\n    async init(){\n        this.animationComponent = this.addComponent(Animation);\n        this.initParams();\n        this.initStateMachine();\n        this.initAnimationEvent();\n        await Promise.all(this.waitingList);\n    }\n\n    initParams(){\n        this.params.set(PARAMS_NAME_ENUM.IDLE, getInitParamsTrigger());\n        this.params.set(PARAMS_NAME_ENUM.TURNLEFT, getInitParamsTrigger());\n    }\n\n    initStateMachine(){\n        this.stateMachines.set(PARAMS_NAME_ENUM.IDLE, new State(this, 'texture/player/idle/top', AnimationClip.WrapMode.Loop));\n        this.stateMachines.set(PARAMS_NAME_ENUM.TURNLEFT, new State(this, 'texture/player/turnleft/top'));\n    }\n\n    initAnimationEvent(){\n        this.animationComponent.on(Animation.EventType.FINISHED, ()=> {\n            const name = this.animationComponent.defaultClip.name;\n            const whiteList = ['turn'];\n            if(whiteList.some(v=> name.includes(v))){\n                this.setParams(PARAMS_NAME_ENUM.IDLE, true);\n            }\n        });\n    }\n\n    run(){\n        switch (this.currentState){\n            case this.stateMachines.get(PARAMS_NAME_ENUM.TURNLEFT):\n            case this.stateMachines.get(PARAMS_NAME_ENUM.IDLE):\n                if(this.params.get(PARAMS_NAME_ENUM.TURNLEFT).value){\n                    this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.TURNLEFT);\n                    }else if(this.params.get(PARAMS_NAME_ENUM.IDLE).value){\n                    this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.IDLE);\n                }\n                break;\n            default:\n                this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.IDLE);\n        }\n    }\n}\n\n"]}