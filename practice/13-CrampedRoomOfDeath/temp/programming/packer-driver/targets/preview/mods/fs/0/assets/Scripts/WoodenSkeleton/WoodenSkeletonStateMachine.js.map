{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/WoodenSkeleton/WoodenSkeletonStateMachine.ts"],"names":["_decorator","Animation","ENTITY_STATE_ENUM","FSM_PARAMS_TYPE_ENUM","PARAMS_NAME_ENUM","getInitParamsNumber","getInitParamsTrigger","StateMachine","IdleSubStateMachine","AttackSubStateMachine","EntityManager","ccclass","property","WoodenSkeletonStateMachine","restTrigger","_","item","params","type","TRIGGER","value","init","animationComponent","addComponent","initParams","initStateMachine","initAnimationEvent","Promise","all","waitingList","set","IDLE","ATTACK","DIRECTION","stateMachines","on","EventType","FINISHED","name","defaultClip","whiteList","some","v","includes","node","getComponent","state","run","currentState","get"],"mappings":"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","sourcesContent":["import {_decorator, Animation, AnimationClip, Component, SpriteFrame} from 'cc';\nimport {ENTITY_STATE_ENUM, FSM_PARAMS_TYPE_ENUM, PARAMS_NAME_ENUM} from \"db://assets/Enums\";\nimport {getInitParamsNumber, getInitParamsTrigger, StateMachine} from \"db://assets/Base/StateMachine\";\nimport IdleSubStateMachine from \"db://assets/Scripts/WoodenSkeleton/IdleSubStateMachine\";\nimport AttackSubStateMachine from \"db://assets/Scripts/WoodenSkeleton/AttackSubStateMachine\";\nimport {EntityManager} from \"db://assets/Base/EntityManager\";\n\nconst { ccclass, property } = _decorator;\n\n//自定义联合类型\ntype ParamsValueType = boolean | number;\n\n@ccclass('WoodenSkeletonStateMachine')\nexport class WoodenSkeletonStateMachine extends StateMachine {\n\n    restTrigger(){\n        for(const [_, item] of this.params){\n            if(item.type === FSM_PARAMS_TYPE_ENUM.TRIGGER){\n                item.value = false;\n            }\n        }\n    }\n\n    async init(){\n        this.animationComponent = this.addComponent(Animation);\n        this.initParams();\n        this.initStateMachine();\n        this.initAnimationEvent();\n        await Promise.all(this.waitingList);\n    }\n\n    initParams(){\n        //注册参数\n        this.params.set(PARAMS_NAME_ENUM.IDLE, getInitParamsTrigger());\n        this.params.set(PARAMS_NAME_ENUM.ATTACK, getInitParamsTrigger());\n        this.params.set(PARAMS_NAME_ENUM.DIRECTION, getInitParamsNumber());\n    }\n\n    initStateMachine(){\n        //注册子状态机\n        this.stateMachines.set(PARAMS_NAME_ENUM.IDLE, new IdleSubStateMachine(this));\n        this.stateMachines.set(PARAMS_NAME_ENUM.ATTACK, new AttackSubStateMachine(this));\n    }\n\n    initAnimationEvent(){\n        this.animationComponent.on(Animation.EventType.FINISHED, ()=> {\n            const name = this.animationComponent.defaultClip.name;\n            const whiteList = ['attack'];\n            if(whiteList.some(v=> name.includes(v))){\n                this.node.getComponent(EntityManager).state = ENTITY_STATE_ENUM.IDLE;\n            }\n        });\n    }\n\n    run(){\n        switch (this.currentState){\n            case this.stateMachines.get(PARAMS_NAME_ENUM.IDLE):\n            case this.stateMachines.get(PARAMS_NAME_ENUM.ATTACK):\n              if(this.params.get(PARAMS_NAME_ENUM.IDLE).value){\n                    this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.IDLE);\n                }else if(this.params.get(PARAMS_NAME_ENUM.ATTACK).value){\n                  this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.ATTACK);\n              }else{\n                    this.currentState = this.currentState;\n                }\n                break;\n            default:\n                this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.IDLE);\n        }\n    }\n}\n\n"]}