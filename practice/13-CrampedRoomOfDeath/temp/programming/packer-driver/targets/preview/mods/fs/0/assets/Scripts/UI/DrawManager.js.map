{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/UI/DrawManager.ts"],"names":["_decorator","Component","BlockInputEvents","Graphics","view","Color","game","UITransform","ccclass","property","SCREEN_WIDTH","getVisibleSize","width","SCREEN_HEIGHT","height","DEFAULT_DURATION","DrawManager","FADE_STATE_ENUM","IDLE","init","block","addComponent","ctx","transform","getComponent","setAnchorPoint","setContentSize","setAlpha","percent","clear","rect","fillColor","fill","enabled","fadeIn","duration","oldTime","totalTime","state","FADE_IN","Promise","resolve","fadeResolve","fadeOut","FADE_OUT","update"],"mappings":"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","sourcesContent":["import { _decorator, Component, BlockInputEvents, Graphics, view, Color, game, UITransform } from 'cc';\nimport EventManager from \"db://assets/Runtime/EventManager\";\nimport {CONTROLLER_ENUM, EVENT_ENUM} from \"db://assets/Enums\";\nconst { ccclass, property } = _decorator;\n\n//当前屏幕宽度\nconst SCREEN_WIDTH = view.getVisibleSize().width;\nconst SCREEN_HEIGHT = view.getVisibleSize().height;\n\nconst enum FADE_STATE_ENUM{\n    IDLE = 'IDLE',\n    FADE_IN = 'FADE_IN',\n    FADE_OUT = 'FADE_OUT',\n}\n\nexport const DEFAULT_DURATION = 200;\n\n//疑问\n@ccclass('DrawManager')\nexport class DrawManager extends Component {\n    private ctx: Graphics;\n    private state: FADE_STATE_ENUM = FADE_STATE_ENUM.IDLE;\n    private oldTime: number = 0;\n    private duration: number = 0;\n    private fadeResolve: (value: PromiseLike<null>)=> void;\n    private block: BlockInputEvents;\n\n    init(){\n        this.block = this.addComponent(BlockInputEvents);\n        this.ctx = this.addComponent(Graphics);\n        const transform = this.getComponent(UITransform);\n        transform.setAnchorPoint(0.5, 0.5);\n        transform.setContentSize(SCREEN_WIDTH, SCREEN_HEIGHT);\n\n        this.setAlpha(1);\n    }\n\n    setAlpha(percent: number){\n        this.ctx.clear();\n        this.ctx.rect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n        this.ctx.fillColor = new Color(0, 0, 0, 255 * percent);\n        this.ctx.fill();\n        this.block.enabled = percent === 1 ? true : false;\n    }\n\n    fadeIn(duration: number = DEFAULT_DURATION){\n        this.setAlpha(0);\n        this.duration = duration;\n        this.oldTime = game.totalTime;\n        this.state = FADE_STATE_ENUM.FADE_IN;\n        return new Promise((resolve => {\n            this.fadeResolve = resolve;\n        }));\n    }\n\n    fadeOut(duration: number = DEFAULT_DURATION){\n        this.setAlpha(1);\n        this.duration = duration;\n        this.oldTime = game.totalTime;\n        this.state = FADE_STATE_ENUM.FADE_OUT;\n        return new Promise((resolve => {\n            this.fadeResolve = resolve;\n        }));\n    }\n\n    update(){\n        const percent = (game.totalTime - this.oldTime) / this.duration;\n        switch (this.state){\n            case FADE_STATE_ENUM.FADE_IN:\n                if(percent < 1){\n                    this.setAlpha(percent);\n                }else {\n                    this.setAlpha(1);\n                    this.state = FADE_STATE_ENUM.IDLE;\n                    this.fadeResolve(null);\n                }\n                break;\n            case FADE_STATE_ENUM.FADE_OUT:\n                if(percent < 1){\n                    this.setAlpha(1 - percent);\n                }else {\n                    this.setAlpha(0);\n                    this.state = FADE_STATE_ENUM.IDLE;\n                    this.fadeResolve(null);\n                }\n                break;\n            default:\n        }\n    }\n}\n\n"]}