{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/Spikes/SpikesManager.ts"],"names":["_decorator","Component","Sprite","UITransform","TILE_HEIGHT","TILE_WIDTH","ENTITY_STATE_ENUM","EVENT_ENUM","PARAMS_NAME_ENUM","SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM","EventManager","randomStringByLength","SpikesStateMachine","DataManager","ccclass","property","SpikesManager","count","_count","newCount","fsm","setParams","SPIKES_CURRENT_COUNT","totalCount","_totalCount","newTotalCount","SPIKES_TOTAL_COUNT","init","params","sprite","addComponent","sizeMode","SizeMode","CUSTOM","transform","getComponent","setContentSize","node","x","y","type","Instance","on","PLAYER_MOVE_END","onLoop","update","setPosition","onDestroy","off","onAttack","backZero","player","playerX","playerY","emit","ATTACK_PLAYER","DEATH"],"mappings":"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","sourcesContent":["import {_decorator, Component, Sprite, UITransform} from 'cc';\nimport {TILE_HEIGHT, TILE_WIDTH} from \"db://assets/Scripts/Tile/TileManager\";\nimport {\n    CONTROLLER_ENUM,\n    DIRECTION_ENUM,\n    DIRECTION_ODER_ENUM,\n    ENTITY_STATE_ENUM, ENTITY_TYPE_ENUM,\n    EVENT_ENUM,\n    PARAMS_NAME_ENUM, SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM\n} from \"db://assets/Enums\";\nimport EventManager from \"db://assets/Runtime/EventManager\";\nimport {PlayerStateMachine} from \"db://assets/Scripts/Player/PlayerStateMachine\";\nimport {IEntity, ISpikes} from \"db://assets/Levels\";\nimport {WoodenSkeletonStateMachine} from \"db://assets/Scripts/WoodenSkeleton/WoodenSkeletonStateMachine\";\nimport {StateMachine} from \"db://assets/Base/StateMachine\";\nimport {randomStringByLength} from \"db://assets/Utils\";\nimport {SpikesStateMachine} from \"db://assets/Scripts/Spikes/SpikesStateMachine\";\nimport DataManager from \"db://assets/Runtime/DataManager\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('SpikesManager')\nexport class SpikesManager extends Component {\n    id: string = randomStringByLength(12)\n    x:number = 0\n    y:number = 0\n    fsm: StateMachine\n    type: ENTITY_TYPE_ENUM\n\n    private _count: number\n    private _totalCount: number\n\n    get count(){\n        return this._count;\n    }\n\n    set count(newCount){\n        this._count = newCount;\n        this.fsm.setParams(PARAMS_NAME_ENUM.SPIKES_CURRENT_COUNT, newCount);\n    }\n\n    get totalCount(){\n        return this._totalCount;\n    }\n\n    //数据驱动视图变化\n    set totalCount(newTotalCount){\n        this._totalCount = newTotalCount;\n        this.fsm.setParams(PARAMS_NAME_ENUM.SPIKES_TOTAL_COUNT, newTotalCount);\n    }\n\n    async init(params: ISpikes){\n        const sprite = this.addComponent(Sprite);\n        sprite.sizeMode = Sprite.SizeMode.CUSTOM;\n        const transform = this.getComponent(UITransform);\n        transform.setContentSize(TILE_WIDTH * 4, TILE_HEIGHT * 4);\n\n        // 注册状态机\n        this.fsm = this.node.addComponent(SpikesStateMachine);\n        await this.fsm.init();\n\n        this.x = params.x;\n        this.y = params.y;\n        this.type = params.type;\n        this.totalCount = SPIKES_TYPE_MAP_TOTAL_COUNT_ENUM[this.type];\n        this.count = params.count;\n\n        EventManager.Instance.on(EVENT_ENUM.PLAYER_MOVE_END, this.onLoop, this);\n    }\n\n    update(){\n        this.node.setPosition(this.x * TILE_WIDTH - 1.5 * TILE_WIDTH, -this.y * TILE_HEIGHT + 1.5 * TILE_HEIGHT);\n    }\n\n    onDestroy(){\n        EventManager.Instance.off(EVENT_ENUM.PLAYER_MOVE_END, this.onLoop);\n    }\n\n    onLoop(){\n        if(this.count === this.totalCount){\n            this.count = 1;\n        }else {\n            this.count++;\n        }\n        this.onAttack();\n    }\n\n    backZero(){\n        this.count = 0;\n    }\n\n    onAttack(){\n      const player = DataManager.Instance.player;\n      if(!player) return\n      const { x: playerX, y: playerY } = player;\n      if(this.x === playerX && this.y === playerY && this.count === this.totalCount){\n        EventManager.Instance.emit(EVENT_ENUM.ATTACK_PLAYER, ENTITY_STATE_ENUM.DEATH);\n      }\n    }\n}\n\n"]}