{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/animations/AnimationGraphComponent.ts"],"names":["_decorator","animation","ccclass","property","AnimationGraphComponent","StateMachineComponent"],"mappings":";;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;yCAGaI,uB,WADZF,OAAO,CAAC,yBAAD,C,gBAAR,MACaE,uBADb,SAC6CH,SAAS,CAACI,qBADvD,CAC6E,CACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CyE,O","sourcesContent":["import { _decorator, animation } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = AnimationGraphComponent\n * DateTime = Wed Dec 27 2023 21:17:09 GMT+0800 (中国标准时间)\n * Author = linliwei999\n * FileBasename = AnimationGraphComponent.ts\n * FileBasenameNoExtension = AnimationGraphComponent\n * URL = db://assets/animations/AnimationGraphComponent.ts\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/zh/\n *\n */\n\n@ccclass(\"AnimationGraphComponent\")\nexport class AnimationGraphComponent extends animation.StateMachineComponent {\n    // /**\n    //  * Called when a motion state right after it entered.\n    //  * @param controller The animation controller it within.\n    //  * @param motionStateStatus The status of the motion.\n    //  */\n    // public onMotionStateEnter (controller: animation.AnimationController, motionStateStatus: Readonly<animation.MotionStateStatus>): void {\n    //     // Can be overrode\n    // }\n\n    // /**\n    //  * Called when a motion state is going to be exited.\n    //  * @param controller The animation controller it within.\n    //  * @param motionStateStatus The status of the motion.\n    //  */\n    // public onMotionStateExit (controller: animation.AnimationController, motionStateStatus: Readonly<animation.MotionStateStatus>): void {\n    //     // Can be overrode\n    // }\n\n    // /**\n    //  * Called when a motion state updated except for the first and last frame.\n    //  * @param controller The animation controller it within.\n    //  * @param motionStateStatus The status of the motion.\n    //  */\n    // public onMotionStateUpdate (controller: animation.AnimationController, motionStateStatus: Readonly<animation.MotionStateStatus>): void {\n    //     // Can be overrode\n    // }\n\n    // /**\n    //  * Called when a state machine right after it entered.\n    //  * @param controller The animation controller it within.\n    //  */\n    // public onStateMachineEnter (controller: animation.AnimationController) {\n    //     // Can be overrode\n    // }\n\n    // /**\n    //  * Called when a state machine right after it entered.\n    //  * @param controller The animation controller it within.\n    //  */\n    // public onStateMachineExit (controller: animation.AnimationController) {\n    //     // Can be overrode\n    // }\n}\n"]}