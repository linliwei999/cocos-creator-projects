{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/Spikes/SpikesOneSubStateMachine.ts"],"names":["SpikesOneSubStateMachine","PARAMS_NAME_ENUM","SPIKES_COUNT_ENUM","SPIKES_COUNT_MAP_NUMBER_ENUM","State","SubStateMachine","BASE_URL","constructor","fsm","stateMachines","set","ZERO","ONE","TWO","run","currentCount","getParams","SPIKES_CURRENT_COUNT","currentState","get"],"mappings":";;;yHAcqBA,wB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAVjBC,MAAAA,gB,iBAAAA,gB;AACAC,MAAAA,iB,iBAAAA,iB;AACAC,MAAAA,4B,iBAAAA,4B;;AAEGC,MAAAA,K;;AAECC,MAAAA,e,iBAAAA,e;;;;;;;AAEFC,MAAAA,Q,GAAW,0B;;yBAEIN,wB,GAAN,MAAMA,wBAAN;AAAA;AAAA,8CAAsD;AACjEO,QAAAA,WAAW,CAACC,GAAD,EAAoB;AAC3B,gBAAMA,GAAN;AACA,eAAKC,aAAL,CAAmBC,GAAnB,CAAuB;AAAA;AAAA,sDAAkBC,IAAzC,EAA+C;AAAA;AAAA,8BAAUH,GAAV,EAAgB,GAAEF,QAAS,OAA3B,CAA/C;AACA,eAAKG,aAAL,CAAmBC,GAAnB,CAAuB;AAAA;AAAA,sDAAkBE,GAAzC,EAA8C;AAAA;AAAA,8BAAUJ,GAAV,EAAgB,GAAEF,QAAS,MAA3B,CAA9C;AACA,eAAKG,aAAL,CAAmBC,GAAnB,CAAuB;AAAA;AAAA,sDAAkBG,GAAzC,EAA8C;AAAA;AAAA,8BAAUL,GAAV,EAAgB,GAAEF,QAAS,MAA3B,CAA9C;AACH;;AAEDQ,QAAAA,GAAG,GAAE;AACD,gBAAMC,YAAY,GAAG,KAAKP,GAAL,CAASQ,SAAT,CAAmB;AAAA;AAAA,oDAAiBC,oBAApC,CAArB;AACA,eAAKC,YAAL,GAAoB,KAAKT,aAAL,CAAmBU,GAAnB,CAAuB;AAAA;AAAA,4EAA6BJ,YAA7B,CAAvB,CAApB;AACH;;AAXgE,O","sourcesContent":["import {StateMachine} from \"db://assets/Base/StateMachine\";\nimport {\n    DIRECTION_ENUM,\n    DIRECTION_ODER_ENUM,\n    PARAMS_NAME_ENUM,\n    SPIKES_COUNT_ENUM,\n    SPIKES_COUNT_MAP_NUMBER_ENUM\n} from \"db://assets/Enums\";\nimport State from \"db://assets/Base/State\";\nimport DirectionSubStateMachine from \"db://assets/Base/DirectionSubStateMachine\";\nimport {SubStateMachine} from \"db://assets/Base/SubStateMachine\";\n\nconst BASE_URL = 'texture/spikes/spikesone';\n\nexport default class SpikesOneSubStateMachine extends SubStateMachine{\n    constructor(fsm: StateMachine) {\n        super(fsm);\n        this.stateMachines.set(SPIKES_COUNT_ENUM.ZERO, new State(fsm, `${BASE_URL}/zero`));\n        this.stateMachines.set(SPIKES_COUNT_ENUM.ONE, new State(fsm, `${BASE_URL}/one`));\n        this.stateMachines.set(SPIKES_COUNT_ENUM.TWO, new State(fsm, `${BASE_URL}/two`));\n    }\n\n    run(){\n        const currentCount = this.fsm.getParams(PARAMS_NAME_ENUM.SPIKES_CURRENT_COUNT);\n        this.currentState = this.stateMachines.get(SPIKES_COUNT_MAP_NUMBER_ENUM[currentCount as number]);\n    }\n}"]}