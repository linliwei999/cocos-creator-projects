{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/Sence/BattleManager.ts"],"names":["_decorator","Component","TileMapManager","createUINode","Levels","DataManagerInstance","TILE_HEIGHT","TILE_WIDTH","ccclass","property","BattleManager","start","generateStage","initLevel","level","mapInfo","mapRowCount","length","mapColumnCount","generateTileMap","stage","setParent","node","tileMap","tileManager","addComponent","init","adaptPos","disX","disY","setPosition"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACbC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,Y,iBAAAA,Y;;AACDC,MAAAA,M;;AACCC,MAAAA,mB,iBAAAA,mB;;AACAC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,U,iBAAAA,U;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;+BAGjBU,a,WADZF,OAAO,CAAC,eAAD,C,yBAAR,MACaE,aADb,SACmCT,SADnC,CAC6C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAUzCU,QAAAA,KAAK,GAAI;AACL,eAAKC,aAAL;AACA,eAAKC,SAAL;AACH;;AAEDA,QAAAA,SAAS,GAAE;AACP,gBAAMC,KAAK,GAAG;AAAA;AAAA,gCAAQ,QAAO,CAAE,EAAjB,CAAd;;AACA,cAAGA,KAAH,EAAS;AACL,iBAAKA,KAAL,GAAaA,KAAb,CADK,CAEL;;AACA;AAAA;AAAA,4DAAoBC,OAApB,GAA8B,KAAKD,KAAL,CAAWC,OAAzC;AACA;AAAA;AAAA,4DAAoBC,WAApB,GAAkC,KAAKF,KAAL,CAAWC,OAAX,CAAmBE,MAAnB,IAA6B,CAA/D;AACA;AAAA;AAAA,4DAAoBC,cAApB,GAAqC,KAAKJ,KAAL,CAAWC,OAAX,CAAmB,CAAnB,EAAsBE,MAAtB,IAAgC,CAArE;AACA,iBAAKE,eAAL;AACH;AACJ;;AAEDP,QAAAA,aAAa,GAAE;AACX;AACA,eAAKQ,KAAL,GAAa;AAAA;AAAA,6CAAb;AACA,eAAKA,KAAL,CAAWC,SAAX,CAAqB,KAAKC,IAA1B;AACH;;AAEDH,QAAAA,eAAe,GAAE;AACb,gBAAMI,OAAO,GAAG;AAAA;AAAA,6CAAhB;AACAA,UAAAA,OAAO,CAACF,SAAR,CAAkB,KAAKD,KAAvB;AACA,gBAAMI,WAAW,GAAGD,OAAO,CAACE,YAAR;AAAA;AAAA,+CAApB;AACAD,UAAAA,WAAW,CAACE,IAAZ;AAEA,eAAKC,QAAL;AACH,SAxCwC,CA0CzC;;;AACAA,QAAAA,QAAQ,GAAI;AACR,gBAAM;AAAEX,YAAAA,WAAF;AAAeE,YAAAA;AAAf;AAAA;AAAA,wDAAN;AACA,gBAAMU,IAAI,GAAG;AAAA;AAAA,0CAAaZ,WAAb,GAA2B,CAAxC;AACA,gBAAMa,IAAI,GAAG;AAAA;AAAA,4CAAcX,cAAd,GAA+B,CAA/B,GAAmC,EAAhD;AACA,eAAKE,KAAL,CAAWU,WAAX,CAAuB,CAACF,IAAxB,EAA8BC,IAA9B;AACH;;AAhDwC,O","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nimport {TileMapManager} from \"db://assets/Scripts/Tile/TileMapManager\";\nimport {createUINode} from \"db://assets/Utils\";\nimport Levels, {ILevel} from \"db://assets/Levels\";\nimport {DataManagerInstance} from \"db://assets/Runtime/DataManager\";\nimport {TILE_HEIGHT, TILE_WIDTH} from \"db://assets/Scripts/Tile/TileManager\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('BattleManager')\nexport class BattleManager extends Component {\n    // [1]\n    // dummy = '';\n\n    // [2]\n    // @property\n    // serializableDummy = 0;\n    level: ILevel\n    stage: Node\n\n    start () {\n        this.generateStage();\n        this.initLevel();\n    }\n\n    initLevel(){\n        const level = Levels[`level${1}`];\n        if(level){\n            this.level = level;\n            //把地图数据存到数据中心(单例)\n            DataManagerInstance.mapInfo = this.level.mapInfo;\n            DataManagerInstance.mapRowCount = this.level.mapInfo.length || 0;\n            DataManagerInstance.mapColumnCount = this.level.mapInfo[0].length || 0;\n            this.generateTileMap();\n        }\n    }\n\n    generateStage(){\n        //创建舞台\n        this.stage = createUINode();\n        this.stage.setParent(this.node);\n    }\n\n    generateTileMap(){\n        const tileMap = createUINode();\n        tileMap.setParent(this.stage);\n        const tileManager = tileMap.addComponent(TileMapManager);\n        tileManager.init();\n\n        this.adaptPos();\n    }\n\n    //瓦片地图适配屏幕\n    adaptPos () {\n        const { mapRowCount, mapColumnCount } = DataManagerInstance;\n        const disX = TILE_WIDTH * mapRowCount / 2;\n        const disY = TILE_HEIGHT * mapColumnCount / 2 + 80;\n        this.stage.setPosition(-disX, disY);\n    }\n}\n\n"]}