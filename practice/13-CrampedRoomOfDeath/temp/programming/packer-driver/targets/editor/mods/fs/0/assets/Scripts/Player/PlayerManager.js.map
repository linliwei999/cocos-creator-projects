{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/Player/PlayerManager.ts"],"names":["_decorator","CONTROLLER_ENUM","DIRECTION_ENUM","ENTITY_STATE_ENUM","ENTITY_TYPE_ENUM","EVENT_ENUM","EventManager","PlayerStateMachine","EntityManager","DataManager","ccclass","property","ANIMATION_SPEED","PlayerManager","init","fsm","node","addComponent","x","y","type","PLAYER","direction","TOP","state","IDLE","targetX","targetY","Instance","on","PLAYER_CTRL","inputHandle","updateXY","speed","Math","abs","isMoving","emit","PLAYER_MOVE_END","inputDirection","willBlock","console","log","move","tileInfo","playerNextY","weaponNextY","BLOCKFRONT","playerTile","weaponTile","moveable","turnable","LEFT","weaponNextX","RIGHT","TURNLEFT","nextX","nextY","BOTTOM","BLOCKTURNLEFT","TURNRIGHT","update"],"mappings":"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","sourcesContent":["import {_decorator} from 'cc';\nimport {CONTROLLER_ENUM, DIRECTION_ENUM, ENTITY_STATE_ENUM, ENTITY_TYPE_ENUM, EVENT_ENUM} from \"db://assets/Enums\";\nimport EventManager from \"db://assets/Runtime/EventManager\";\nimport {PlayerStateMachine} from \"db://assets/Scripts/Player/PlayerStateMachine\";\nimport {EntityManager} from \"db://assets/Base/EntityManager\";\nimport DataManager from \"db://assets/Runtime/DataManager\";\n\nconst { ccclass, property } = _decorator;\n\nconst ANIMATION_SPEED = 1/8;\n\n@ccclass('PlayerManager')\nexport class PlayerManager extends EntityManager {\n    targetX:number = 0\n    targetY:number = 0\n    isMoving: boolean = false\n    private readonly speed = ANIMATION_SPEED\n\n    async init(){\n        this.fsm = this.node.addComponent(PlayerStateMachine);\n        await this.fsm.init();\n        super.init({\n            x: 2,\n            y: 8,\n            type: ENTITY_TYPE_ENUM.PLAYER,\n            direction: DIRECTION_ENUM.TOP,\n            state: ENTITY_STATE_ENUM.IDLE\n        });\n        this.targetX = this.x;\n        this.targetY = this.y;\n        EventManager.Instance.on(EVENT_ENUM.PLAYER_CTRL, this.inputHandle, this);\n    }\n\n    updateXY(){\n        if(this.targetX < this.x){\n            this.x -= this.speed\n        }else if(this.targetX > this.x){\n            this.x += this.speed\n        }\n\n        if(this.targetY < this.y){\n            this.y -= this.speed\n        }else if(this.targetY > this.y){\n            this.y += this.speed\n        }\n\n        if(Math.abs(this.targetX - this.x) < 0.1 && Math.abs(this.targetY - this.y) < 0.1 && this.isMoving){\n            this.x = this.targetX;\n            this.y = this.targetY;\n            this.isMoving = false;\n            EventManager.Instance.emit(EVENT_ENUM.PLAYER_MOVE_END);\n        }\n    }\n\n    inputHandle(inputDirection: CONTROLLER_ENUM){\n        if(this.willBlock(inputDirection)){\n            console.log('撞墙');\n            return\n        }\n        this.move(inputDirection);\n    }\n\n    willBlock(inputDirection: CONTROLLER_ENUM){\n        const { targetX: x, targetY: y, direction } = this;\n        const { tileInfo } = DataManager.Instance;\n        if(inputDirection === CONTROLLER_ENUM.TOP){\n            if(direction === DIRECTION_ENUM.TOP){\n                //疑问\n                const playerNextY = y - 1;\n                const weaponNextY = y - 2;\n                //玩家走出地图\n                if(playerNextY <= 1){\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\n                    return true;\n                }\n                //下一个瓦片\n                const playerTile = tileInfo[x][playerNextY];\n                const weaponTile = tileInfo[x][weaponNextY];\n                if(playerTile && playerTile.moveable && (!weaponTile || weaponTile.turnable)){\n                    //empty\n                }else {\n                    this.state = ENTITY_STATE_ENUM.BLOCKFRONT;\n                    return true;\n                }\n            }else if(direction === DIRECTION_ENUM.LEFT){\n                //左方向移动\n                const playerNextY = y - 1;\n                const weaponNextX = x - 1;\n                const weaponNextY = playerNextY;\n                //下一个瓦片\n                const playerTile = tileInfo[x][playerNextY];\n                const weaponTile = tileInfo[weaponNextX][weaponNextY];\n                if(playerTile?.moveable && weaponTile.moveable){\n                    //empty\n                }else {\n                    return true;\n                }\n            }else if(direction === DIRECTION_ENUM.RIGHT){\n                //右方向移动\n                const playerNextY = y - 1;\n                const weaponNextX = x + 1;\n                const weaponNextY = playerNextY;\n                //下一个瓦片\n                const playerTile = tileInfo[x][playerNextY];\n                const weaponTile = tileInfo[weaponNextX][weaponNextY];\n                if(playerTile?.moveable && weaponTile.moveable){\n                    //empty\n                }else {\n                    return true;\n                }\n            }\n        }else if(inputDirection === CONTROLLER_ENUM.TURNLEFT){\n            let nextX\n            let nextY\n            if(direction === DIRECTION_ENUM.TOP){\n                nextX = x - 1;\n                nextY = y - 1;\n            }else if(direction === DIRECTION_ENUM.BOTTOM){\n                nextX = x + 1;\n                nextY = y + 1;\n            }else if(direction === DIRECTION_ENUM.LEFT){\n                nextX = x - 1;\n                nextY = y + 1;\n            }else if(direction === DIRECTION_ENUM.RIGHT){\n                nextX = x + 1;\n                nextY = y - 1;\n            }\n            if(\n                (!tileInfo[x][nextY] || tileInfo[x][nextY].turnable) &&\n                (!tileInfo[nextX][y] || tileInfo[nextX][y].turnable) &&\n                (!tileInfo[nextX][nextY] || tileInfo[nextX][nextY].turnable)\n            ){\n                //empty\n            }else {\n                this.state = ENTITY_STATE_ENUM.BLOCKTURNLEFT;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    //玩家移动\n    move(inputDirection: CONTROLLER_ENUM){\n        if (inputDirection === CONTROLLER_ENUM.TOP){\n            this.targetY -=1\n        }else if(inputDirection === CONTROLLER_ENUM.BOTTOM){\n            this.targetY +=1\n        }else if(inputDirection === CONTROLLER_ENUM.LEFT){\n            this.targetX -=1\n        }else if(inputDirection === CONTROLLER_ENUM.RIGHT){\n            this.targetX +=1\n        }else if(inputDirection === CONTROLLER_ENUM.TURNLEFT){\n            if(this.direction === DIRECTION_ENUM.TOP){\n                this.direction = DIRECTION_ENUM.LEFT;\n            }else if(this.direction === DIRECTION_ENUM.LEFT){\n                this.direction = DIRECTION_ENUM.BOTTOM;\n            }else if(this.direction === DIRECTION_ENUM.BOTTOM){\n                this.direction = DIRECTION_ENUM.RIGHT;\n            }else if(this.direction === DIRECTION_ENUM.RIGHT){\n                this.direction = DIRECTION_ENUM.TOP;\n            }\n            this.state = ENTITY_STATE_ENUM.TURNLEFT;\n        }\n        if(!(inputDirection === CONTROLLER_ENUM.TURNLEFT || inputDirection === CONTROLLER_ENUM.TURNRIGHT)){\n            this.isMoving = true;\n            // EventManager.Instance.emit(EVENT_ENUM.PLAYER_MOVE_END);\n        }\n    }\n\n    update(){\n        this.updateXY();\n        super.update();\n    }\n}\n\n"]}