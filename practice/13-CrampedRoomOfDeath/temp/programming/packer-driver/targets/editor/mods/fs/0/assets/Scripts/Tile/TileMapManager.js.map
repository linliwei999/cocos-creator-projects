{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/Tile/TileMapManager.ts"],"names":["_decorator","Component","Node","Sprite","resources","SpriteFrame","UITransform","Layers","Levels","ccclass","property","TILE_WIDTH","TILE_HEIGHT","TileMapManager","init","level","mapInfo","spriteFrames","loadRes","i","length","column","j","item","src","type","node","sprite","addComponent","imgSrc","spriteFrame","find","v","name","transform","setContentSize","layer","nameToLayer","setPosition","setParent","Promise","resolve","reject","loadDir","err","assets"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,M,OAAAA,M;;AAE5EC,MAAAA,M;;;;;;;OADD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;;4BAGjBW,U,GAAa,E;;6BACbC,W,GAAc,E;;gCAGdC,c,WADZJ,OAAO,CAAC,gBAAD,C,gBAAR,MACaI,cADb,SACoCZ,SADpC,CAC8C;AAChC,cAAJa,IAAI,GAAI;AACV,gBAAMC,KAAK,GAAG;AAAA;AAAA,gCAAQ,QAAO,CAAE,EAAjB,CAAd;AACA,gBAAM;AAAEC,YAAAA;AAAF,cAAcD,KAApB;AACA,gBAAME,YAAY,GAAG,MAAM,KAAKC,OAAL,EAA3B,CAHU,CAIV;AACA;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,kBAAME,MAAM,GAAGL,OAAO,CAACG,CAAD,CAAtB;;AACA,iBAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACD,MAA3B,EAAmCE,CAAC,EAApC,EAAwC;AACpC,oBAAMC,IAAI,GAAGF,MAAM,CAACC,CAAD,CAAnB;;AACA,kBAAGC,IAAI,CAACC,GAAL,KAAa,IAAb,IAAqBD,IAAI,CAACE,IAAL,KAAc,IAAtC,EAA2C;AACvC;AACH;;AACD,oBAAMC,IAAI,GAAG,IAAIxB,IAAJ,EAAb;AACA,oBAAMyB,MAAM,GAAGD,IAAI,CAACE,YAAL,CAAkBzB,MAAlB,CAAf;AACA,oBAAM0B,MAAM,GAAI,SAAQN,IAAI,CAACC,GAAI,GAAjC;AACAG,cAAAA,MAAM,CAACG,WAAP,GAAqBb,YAAY,CAACc,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWJ,MAAlC,KAA6CZ,YAAY,CAAC,CAAD,CAA9E;AACA,oBAAMiB,SAAS,GAAGR,IAAI,CAACE,YAAL,CAAkBtB,WAAlB,CAAlB;AACA4B,cAAAA,SAAS,CAACC,cAAV,CAAyBxB,UAAzB,EAAqCC,WAArC,EAVoC,CAWpC;;AACAc,cAAAA,IAAI,CAACU,KAAL,GAAa,KAAK7B,MAAM,CAAC8B,WAAP,CAAmB,OAAnB,CAAlB;AACAX,cAAAA,IAAI,CAACY,WAAL,CAAiBnB,CAAC,GAAGR,UAArB,EAAiC,CAACW,CAAD,GAAKV,WAAtC;AACAc,cAAAA,IAAI,CAACa,SAAL,CAAe,KAAKb,IAApB;AACH;AACJ;AACJ;;AAEDR,QAAAA,OAAO,GAAI;AACP,iBAAO,IAAIsB,OAAJ,CAA2B,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnD;AACAtC,YAAAA,SAAS,CAACuC,OAAV,CAAkB,mBAAlB,EAAuCtC,WAAvC,EAAoD,UAAUuC,GAAV,EAAeC,MAAf,EAAuB;AACvE,kBAAGD,GAAH,EAAO;AACHF,gBAAAA,MAAM,CAACE,GAAD,CAAN;AACA;AACH;;AACDH,cAAAA,OAAO,CAACI,MAAD,CAAP;AACH,aAND;AAOH,WATM,CAAP;AAWH;;AAxCyC,O","sourcesContent":["import { _decorator, Component, Node, Sprite, resources, SpriteFrame, UITransform, Layers } from 'cc';\nconst { ccclass, property } = _decorator;\nimport Levels from \"db://assets/Levels\";\n\nexport const TILE_WIDTH = 55;\nexport const TILE_HEIGHT = 55;\n\n@ccclass('TileMapManager')\nexport class TileMapManager extends Component {\n    async init () {\n        const level = Levels[`level${1}`];\n        const { mapInfo } = level;\n        const spriteFrames = await this.loadRes();\n        // console.log('地图信息：', level );\n        // console.log(spriteFrames);\n        for (let i = 0; i < mapInfo.length; i++) {\n            const column = mapInfo[i];\n            for (let j = 0; j < column.length; j++) {\n                const item = column[j];\n                if(item.src === null || item.type === null){\n                    continue\n                }\n                const node = new Node();\n                const sprite = node.addComponent(Sprite);\n                const imgSrc = `tile (${item.src})`;\n                sprite.spriteFrame = spriteFrames.find(v => v.name === imgSrc) || spriteFrames[0];\n                const transform = node.addComponent(UITransform);\n                transform.setContentSize(TILE_WIDTH, TILE_HEIGHT);\n                // node.layer = 1 << 25;\n                node.layer = 1 << Layers.nameToLayer(\"UI_2D\");\n                node.setPosition(i * TILE_WIDTH, -j * TILE_HEIGHT);\n                node.setParent(this.node);\n            }\n        }\n    }\n\n    loadRes () {\n        return new Promise<SpriteFrame[]>((resolve, reject) => {\n            // 加载 test assets 目录下所有 SpriteFrame，并且获取它们的路径\n            resources.loadDir(\"texture/tile/tile\", SpriteFrame, function (err, assets) {\n                if(err){\n                    reject(err);\n                    return\n                }\n                resolve(assets);\n            });\n        });\n\n    }\n}\n\n"]}