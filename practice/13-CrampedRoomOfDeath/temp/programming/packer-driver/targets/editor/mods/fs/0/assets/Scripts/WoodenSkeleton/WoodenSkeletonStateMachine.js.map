{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/WoodenSkeleton/WoodenSkeletonStateMachine.ts"],"names":["_decorator","Animation","FSM_PARAMS_TYPE_ENUM","PARAMS_NAME_ENUM","getInitParamsNumber","getInitParamsTrigger","StateMachine","IdleSubStateMachine","ccclass","property","WoodenSkeletonStateMachine","restTrigger","_","item","params","type","TRIGGER","value","init","animationComponent","addComponent","initParams","initStateMachine","initAnimationEvent","Promise","all","waitingList","set","IDLE","DIRECTION","stateMachines","on","EventType","FINISHED","run","currentState","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACOC,MAAAA,oB,iBAAAA,oB;AAAsBC,MAAAA,gB,iBAAAA,gB;;AACzCC,MAAAA,mB,iBAAAA,mB;AAAqBC,MAAAA,oB,iBAAAA,oB;AAAsBC,MAAAA,Y,iBAAAA,Y;;AAC5CC,MAAAA,mB;;;;;;;OAED;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U,GAE9B;;4CAIaU,0B,WADZF,OAAO,CAAC,4BAAD,C,gBAAR,MACaE,0BADb;AAAA;AAAA,wCAC6D;AAEzDC,QAAAA,WAAW,GAAE;AACT,eAAI,MAAM,CAACC,CAAD,EAAIC,IAAJ,CAAV,IAAuB,KAAKC,MAA5B,EAAmC;AAC/B,gBAAGD,IAAI,CAACE,IAAL,KAAc;AAAA;AAAA,8DAAqBC,OAAtC,EAA8C;AAC1CH,cAAAA,IAAI,CAACI,KAAL,GAAa,KAAb;AACH;AACJ;AACJ;;AAES,cAAJC,IAAI,GAAE;AACR,eAAKC,kBAAL,GAA0B,KAAKC,YAAL,CAAkBnB,SAAlB,CAA1B;AACA,eAAKoB,UAAL;AACA,eAAKC,gBAAL;AACA,eAAKC,kBAAL;AACA,gBAAMC,OAAO,CAACC,GAAR,CAAY,KAAKC,WAAjB,CAAN;AACH;;AAEDL,QAAAA,UAAU,GAAE;AACR;AACA,eAAKP,MAAL,CAAYa,GAAZ,CAAgB;AAAA;AAAA,oDAAiBC,IAAjC,EAAuC;AAAA;AAAA,6DAAvC;AACA,eAAKd,MAAL,CAAYa,GAAZ,CAAgB;AAAA;AAAA,oDAAiBE,SAAjC,EAA4C;AAAA;AAAA,2DAA5C;AACH;;AAEDP,QAAAA,gBAAgB,GAAE;AACd;AACA,eAAKQ,aAAL,CAAmBH,GAAnB,CAAuB;AAAA;AAAA,oDAAiBC,IAAxC,EAA8C;AAAA;AAAA,0DAAwB,IAAxB,CAA9C;AACH;;AAEDL,QAAAA,kBAAkB,GAAE;AAChB,eAAKJ,kBAAL,CAAwBY,EAAxB,CAA2B9B,SAAS,CAAC+B,SAAV,CAAoBC,QAA/C,EAAyD,MAAK,CAC1D;AACA;AACA;AACA;AACA;AACA;AACH,WAPD;AAQH;;AAEDC,QAAAA,GAAG,GAAE;AACD,kBAAQ,KAAKC,YAAb;AACI,iBAAK,KAAKL,aAAL,CAAmBM,GAAnB,CAAuB;AAAA;AAAA,sDAAiBR,IAAxC,CAAL;AACE,kBAAG,KAAKd,MAAL,CAAYsB,GAAZ,CAAgB;AAAA;AAAA,wDAAiBR,IAAjC,EAAuCX,KAA1C,EAAgD;AAC1C,qBAAKkB,YAAL,GAAoB,KAAKL,aAAL,CAAmBM,GAAnB,CAAuB;AAAA;AAAA,0DAAiBR,IAAxC,CAApB;AACH,eAFH,MAEO;AACD,qBAAKO,YAAL,GAAoB,KAAKA,YAAzB;AACH;;AACD;;AACJ;AACI,mBAAKA,YAAL,GAAoB,KAAKL,aAAL,CAAmBM,GAAnB,CAAuB;AAAA;AAAA,wDAAiBR,IAAxC,CAApB;AATR;AAWH;;AApDwD,O","sourcesContent":["import {_decorator, Animation, AnimationClip, Component, SpriteFrame} from 'cc';\nimport {ENTITY_STATE_ENUM, FSM_PARAMS_TYPE_ENUM, PARAMS_NAME_ENUM} from \"db://assets/Enums\";\nimport {getInitParamsNumber, getInitParamsTrigger, StateMachine} from \"db://assets/Base/StateMachine\";\nimport IdleSubStateMachine from \"db://assets/Scripts/WoodenSkeleton/IdleSubStateMachine\";\n\nconst { ccclass, property } = _decorator;\n\n//自定义联合类型\ntype ParamsValueType = boolean | number;\n\n@ccclass('WoodenSkeletonStateMachine')\nexport class WoodenSkeletonStateMachine extends StateMachine {\n\n    restTrigger(){\n        for(const [_, item] of this.params){\n            if(item.type === FSM_PARAMS_TYPE_ENUM.TRIGGER){\n                item.value = false;\n            }\n        }\n    }\n\n    async init(){\n        this.animationComponent = this.addComponent(Animation);\n        this.initParams();\n        this.initStateMachine();\n        this.initAnimationEvent();\n        await Promise.all(this.waitingList);\n    }\n\n    initParams(){\n        //注册参数\n        this.params.set(PARAMS_NAME_ENUM.IDLE, getInitParamsTrigger());\n        this.params.set(PARAMS_NAME_ENUM.DIRECTION, getInitParamsNumber());\n    }\n\n    initStateMachine(){\n        //注册子状态机\n        this.stateMachines.set(PARAMS_NAME_ENUM.IDLE, new IdleSubStateMachine(this));\n    }\n\n    initAnimationEvent(){\n        this.animationComponent.on(Animation.EventType.FINISHED, ()=> {\n            // const name = this.animationComponent.defaultClip.name;\n            // const whiteList = ['turn', 'block'];\n            // if(whiteList.some(v=> name.includes(v))){\n            //     this.node.getComponent(EntityManager).state = ENTITY_STATE_ENUM.IDLE;\n            //     // this.setParams(PARAMS_NAME_ENUM.IDLE, true);\n            // }\n        });\n    }\n\n    run(){\n        switch (this.currentState){\n            case this.stateMachines.get(PARAMS_NAME_ENUM.IDLE):\n              if(this.params.get(PARAMS_NAME_ENUM.IDLE).value){\n                    this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.IDLE);\n                }else{\n                    this.currentState = this.currentState;\n                }\n                break;\n            default:\n                this.currentState = this.stateMachines.get(PARAMS_NAME_ENUM.IDLE);\n        }\n    }\n}\n\n"]}