{"version":3,"sources":["file:///Users/lindanian/projects/git/cocos-creator-projects/practice/13-CrampedRoomOfDeath/assets/Scripts/Burst/BurstManager.ts"],"names":["_decorator","UITransform","ENTITY_STATE_ENUM","EVENT_ENUM","EventManager","EntityManager","DataManager","BurstStateMachine","TILE_HEIGHT","TILE_WIDTH","ccclass","property","BurstManager","init","params","fsm","node","addComponent","transform","getComponent","setContentSize","Instance","on","PLAYER_MOVE_END","onBurst","update","setPosition","x","y","onDestroy","off","state","DEATH","player","playerX","playerY","playerState","isPlayerOnBurst","console","log","IDLE","ATTACK","emit","ATTACK_PLAYER","AIRDEATH"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,W,OAAAA,W;;AACZC,MAAAA,iB,iBAAAA,iB;AAAmBC,MAAAA,U,iBAAAA,U;;AACpBC,MAAAA,Y;;AACCC,MAAAA,a,iBAAAA,a;;AACDC,MAAAA,W;;AAECC,MAAAA,iB,iBAAAA,iB;;AACAC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,U,iBAAAA,U;;;;;;;OAEf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBX,U;;8BAGjBY,Y,WADZF,OAAO,CAAC,cAAD,C,gBAAR,MACaE,YADb;AAAA;AAAA,0CACgD;AAClC,cAAJC,IAAI,CAACC,MAAD,EAAiB;AACvB,eAAKC,GAAL,GAAW,KAAKC,IAAL,CAAUC,YAAV;AAAA;AAAA,qDAAX;AACA,gBAAM,KAAKF,GAAL,CAASF,IAAT,EAAN;AACA,gBAAMA,IAAN,CAAWC,MAAX;AACA,gBAAMI,SAAS,GAAG,KAAKC,YAAL,CAAkBlB,WAAlB,CAAlB;AACAiB,UAAAA,SAAS,CAACE,cAAV;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA,4CAAaC,QAAb,CAAsBC,EAAtB,CAAyB;AAAA;AAAA,wCAAWC,eAApC,EAAqD,KAAKC,OAA1D,EAAmE,IAAnE;AACH;;AAEDC,QAAAA,MAAM,GAAE;AACJ,eAAKT,IAAL,CAAUU,WAAV,CAAsB,KAAKC,CAAL;AAAA;AAAA,uCAAtB,EAA2C,CAAC,KAAKC,CAAN;AAAA;AAAA,yCAA3C;AACH;;AAEDC,QAAAA,SAAS,GAAE;AACP,gBAAMA,SAAN;AACA;AAAA;AAAA,4CAAaR,QAAb,CAAsBS,GAAtB,CAA0B;AAAA;AAAA,wCAAWP,eAArC,EAAsD,KAAKC,OAA3D;AACH;;AAEDA,QAAAA,OAAO,GAAE;AACL,cAAG,KAAKO,KAAL,KAAe;AAAA;AAAA,sDAAkBC,KAAjC,IAA0C,CAAC;AAAA;AAAA,0CAAYX,QAAZ,CAAqBY,MAAnE,EAA0E;AACtE;AACH;;AACD,gBAAM;AAAEN,YAAAA,CAAC,EAAEO,OAAL;AAAcN,YAAAA,CAAC,EAAEO,OAAjB;AAA0BJ,YAAAA,KAAK,EAAEK;AAAjC,cAAiD;AAAA;AAAA,0CAAYf,QAAZ,CAAqBY,MAA5E;AACA,gBAAMI,eAAe,GAAG,KAAKV,CAAL,KAAWO,OAAX,IAAsB,KAAKN,CAAL,KAAWO,OAAzD;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,CAAjB,EAAoBO,OAApB,EAA6B,KAAKN,CAAlC,EAAqCO,OAArC;;AACA,cAAGE,eAAe,IAAI,KAAKN,KAAL,KAAe;AAAA;AAAA,sDAAkBS,IAAvD,EAA4D;AACxD,iBAAKT,KAAL,GAAa;AAAA;AAAA,wDAAkBU,MAA/B;AACH,WAFD,MAEM,IAAG,KAAKV,KAAL,KAAe;AAAA;AAAA,sDAAkBU,MAApC,EAA2C;AAC7C,iBAAKV,KAAL,GAAa;AAAA;AAAA,wDAAkBC,KAA/B;;AACA,gBAAGK,eAAH,EAAmB;AACf;AAAA;AAAA,gDAAahB,QAAb,CAAsBqB,IAAtB,CAA2B;AAAA;AAAA,4CAAWC,aAAtC,EAAqD;AAAA;AAAA,0DAAkBC,QAAvE;AACH;AACJ;AACJ;;AAlC2C,O","sourcesContent":["import {_decorator, UITransform} from 'cc';\nimport {ENTITY_STATE_ENUM, EVENT_ENUM} from \"db://assets/Enums\";\nimport EventManager from \"db://assets/Runtime/EventManager\";\nimport {EntityManager} from \"db://assets/Base/EntityManager\";\nimport DataManager from \"db://assets/Runtime/DataManager\";\nimport {IEntity} from \"db://assets/Levels\";\nimport {BurstStateMachine} from \"db://assets/Scripts/Burst/BurstStateMachine\";\nimport {TILE_HEIGHT, TILE_WIDTH} from \"db://assets/Scripts/Tile/TileManager\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('BurstManager')\nexport class BurstManager extends EntityManager {\n    async init(params: IEntity){\n        this.fsm = this.node.addComponent(BurstStateMachine);\n        await this.fsm.init();\n        super.init(params);\n        const transform = this.getComponent(UITransform);\n        transform.setContentSize(TILE_WIDTH, TILE_HEIGHT);\n        EventManager.Instance.on(EVENT_ENUM.PLAYER_MOVE_END, this.onBurst, this);\n    }\n\n    update(){\n        this.node.setPosition(this.x * TILE_WIDTH, -this.y * TILE_HEIGHT);\n    }\n\n    onDestroy(){\n        super.onDestroy();\n        EventManager.Instance.off(EVENT_ENUM.PLAYER_MOVE_END, this.onBurst);\n    }\n\n    onBurst(){\n        if(this.state === ENTITY_STATE_ENUM.DEATH || !DataManager.Instance.player){\n            return;\n        }\n        const { x: playerX, y: playerY, state: playerState } = DataManager.Instance.player;\n        const isPlayerOnBurst = this.x === playerX && this.y === playerY;\n        console.log(this.x, playerX, this.y, playerY)\n        if(isPlayerOnBurst && this.state === ENTITY_STATE_ENUM.IDLE){\n            this.state = ENTITY_STATE_ENUM.ATTACK;\n        }else if(this.state === ENTITY_STATE_ENUM.ATTACK){\n            this.state = ENTITY_STATE_ENUM.DEATH;\n            if(isPlayerOnBurst){\n                EventManager.Instance.emit(EVENT_ENUM.ATTACK_PLAYER, ENTITY_STATE_ENUM.AIRDEATH);\n            }\n        }\n    }\n}\n\n"]}