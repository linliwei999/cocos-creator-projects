{"version":3,"sources":["assets/script/PlayerControl.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAE5E,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAA2C,iCAAY;IADvD;QAAA,qEAwCC;QAtCG,QAAQ;QAER,eAAS,GAAc,IAAI,CAAC;;IAoChC,CAAC;IAjCG,6BAAK,GAAL;QAAA,iBAiBC;QAhBG,IAAI;QACJ,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,UAAC,KAAK;YAC7C,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QACH,IAAI;QACJ,KAAK;QACL,IAAI,CAAC,QAAQ,CAAC;YACV,MAAM;YACN,IAAI,MAAM,GAAG,EAAE,CAAC,WAAW,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;YAC5C,OAAO;YACP,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzC,MAAM,CAAC,CAAC,GAAG,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,CAAC,GAAG,KAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;QAChC,CAAC,EAAE,GAAG,CAAC,CAAC;QACR,UAAU;QACV,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC;IACrD,CAAC;IAED,8BAAM,GAAN,UAAQ,EAAE;IAGV,CAAC;IAED,wCAAgB,GAAhB,UAAiB,KAAK;QAAtB,iBAQC;QAPG,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;QAChC,IAAG,KAAK,CAAC,GAAG,IAAI,CAAC,EAAC;YACd,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,EAAE,UAAC,GAAG,EAAE,GAAG;gBACpD,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC;YACxD,CAAC,CAAC,CAAC;SACN;IAEL,CAAC;IAnCD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;oDACQ;IAHX,aAAa;QADjC,OAAO;OACa,aAAa,CAuCjC;IAAD,oBAAC;CAvCD,AAuCC,CAvC0C,EAAE,CAAC,SAAS,GAuCtD;kBAvCoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PlayerControl extends cc.Component {\n    // 子弹预设体\n    @property(cc.Prefab)\n    bulletPre: cc.Prefab = null;\n\n\n    start () {\n        //移动\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, (event)=>{\n            this.node.setPosition(event.getLocation());\n        });\n        //攻击\n        //计时器\n        this.schedule(()=> {\n            //创建子弹\n            let bullet = cc.instantiate(this.bulletPre);\n            //设置父物体\n            bullet.setParent(cc.director.getScene());\n            bullet.x = this.node.x;\n            bullet.y = this.node.y + 60;\n        }, 0.5);\n        //开启碰撞检测功能\n        cc.director.getCollisionManager().enabled = true;\n    }\n\n    update (dt) {\n   \n\n    }\n\n    onCollisionEnter(ohter){\n        console.log(\"发生碰撞：\", ohter.tag);\n        if(ohter.tag == 1){\n            cc.loader.loadRes(\"hero1_die\", cc.SpriteFrame, (err, res)=> {\n                this.node.getComponent(cc.Sprite).spriteFrame = res;\n            });\n        }\n        \n    }\n}\n"]}